/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyTurtleDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIncludesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIncludesIncludesParserRuleCall_0_0 = (RuleCall)cIncludesAssignment_0.eContents().get(0);
		private final Keyword cLineFeedKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cFuncKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMainKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cPrologueKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPvhmAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPvhmPourcent_vitesse_hauteur_maxParserRuleCall_7_0 = (RuleCall)cPvhmAssignment_7.eContents().get(0);
		private final Keyword cLineFeedKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cPvdmAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cPvdmPourcent_vitesse_deplacement_maxParserRuleCall_9_0 = (RuleCall)cPvdmAssignment_9.eContents().get(0);
		private final Keyword cLineFeedKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPvrmAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPvrmPourcent_vitesse_rotation_maxParserRuleCall_11_0 = (RuleCall)cPvrmAssignment_11.eContents().get(0);
		private final Keyword cLineFeedKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cHmAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cHmHauteur_maxParserRuleCall_13_0 = (RuleCall)cHmAssignment_13.eContents().get(0);
		private final Keyword cLineFeedKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cEmAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cEmEloignement_maxParserRuleCall_15_0 = (RuleCall)cEmAssignment_15.eContents().get(0);
		private final Keyword cLineFeedKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final RuleCall cStartParserRuleCall_18 = (RuleCall)cGroup.eContents().get(18);
		private final Keyword cLineFeedKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Alternatives cAlternatives_20 = (Alternatives)cGroup.eContents().get(20);
		private final Assignment cSeconDecAssignment_20_0 = (Assignment)cAlternatives_20.eContents().get(0);
		private final RuleCall cSeconDecIntDeclParserRuleCall_20_0_0 = (RuleCall)cSeconDecAssignment_20_0.eContents().get(0);
		private final Assignment cPourDecAssignment_20_1 = (Assignment)cAlternatives_20.eContents().get(1);
		private final RuleCall cPourDecPourcentDeclParserRuleCall_20_1_0 = (RuleCall)cPourDecAssignment_20_1.eContents().get(0);
		private final Assignment cStatementsAssignment_20_2 = (Assignment)cAlternatives_20.eContents().get(2);
		private final RuleCall cStatementsStatementParserRuleCall_20_2_0 = (RuleCall)cStatementsAssignment_20_2.eContents().get(0);
		private final Assignment cFonctionsAssignment_20_3 = (Assignment)cAlternatives_20.eContents().get(3);
		private final RuleCall cFonctionsFonctionCallParserRuleCall_20_3_0 = (RuleCall)cFonctionsAssignment_20_3.eContents().get(0);
		private final Assignment cParalleleAssignment_20_4 = (Assignment)cAlternatives_20.eContents().get(4);
		private final Alternatives cParalleleAlternatives_20_4_0 = (Alternatives)cParalleleAssignment_20_4.eContents().get(0);
		private final RuleCall cParalleleParallele2ParserRuleCall_20_4_0_0 = (RuleCall)cParalleleAlternatives_20_4_0.eContents().get(0);
		private final RuleCall cParalleleParallele3ParserRuleCall_20_4_0_1 = (RuleCall)cParalleleAlternatives_20_4_0.eContents().get(1);
		private final Keyword cLineFeedKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final RuleCall cEndParserRuleCall_22 = (RuleCall)cGroup.eContents().get(22);
		private final Keyword cLineFeedKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Keyword cRightCurlyBracketKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Keyword cLineFeedKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Assignment cFonctionsAssignment_26 = (Assignment)cGroup.eContents().get(26);
		private final RuleCall cFonctionsFonctionDeclParserRuleCall_26_0 = (RuleCall)cFonctionsAssignment_26.eContents().get(0);
		private final Keyword cLineFeedKeyword_27 = (Keyword)cGroup.eContents().get(27);
		
		//Model:
		//	(includes+=Includes* '\n'*
		//	'func' 'main' '{'
		//	'prologue' '{'
		//	pvhm+=Pourcent_vitesse_hauteur_max '\n'*
		//	pvdm+=Pourcent_vitesse_deplacement_max '\n'*
		//	pvrm+=Pourcent_vitesse_rotation_max '\n'*
		//	hm+=Hauteur_max '\n'*
		//	em+=Eloignement_max '\n'*
		//	'}'
		//	Start '\n'* (SeconDec+=IntDecl | PourDec+=PourcentDecl | statements+=Statement | fonctions+=FonctionCall |
		//	parallele+=(Parallele2 | Parallele3))* '\n'*
		//	End '\n'*
		//	'}' '\n'*
		//	fonctions+=FonctionDecl* '\n'*)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(includes+=Includes* '\n'* 'func' 'main' '{' 'prologue' '{' pvhm+=Pourcent_vitesse_hauteur_max '\n'*
		//pvdm+=Pourcent_vitesse_deplacement_max '\n'* pvrm+=Pourcent_vitesse_rotation_max '\n'* hm+=Hauteur_max '\n'*
		//em+=Eloignement_max '\n'* '}' Start '\n'* (SeconDec+=IntDecl | PourDec+=PourcentDecl | statements+=Statement |
		//fonctions+=FonctionCall | parallele+=(Parallele2 | Parallele3))* '\n'* End '\n'* '}' '\n'* fonctions+=FonctionDecl*
		//'\n'*)*
		public Group getGroup() { return cGroup; }
		
		//includes+=Includes*
		public Assignment getIncludesAssignment_0() { return cIncludesAssignment_0; }
		
		//Includes
		public RuleCall getIncludesIncludesParserRuleCall_0_0() { return cIncludesIncludesParserRuleCall_0_0; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_1() { return cLineFeedKeyword_1; }
		
		//'func'
		public Keyword getFuncKeyword_2() { return cFuncKeyword_2; }
		
		//'main'
		public Keyword getMainKeyword_3() { return cMainKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'prologue'
		public Keyword getPrologueKeyword_5() { return cPrologueKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//pvhm+=Pourcent_vitesse_hauteur_max
		public Assignment getPvhmAssignment_7() { return cPvhmAssignment_7; }
		
		//Pourcent_vitesse_hauteur_max
		public RuleCall getPvhmPourcent_vitesse_hauteur_maxParserRuleCall_7_0() { return cPvhmPourcent_vitesse_hauteur_maxParserRuleCall_7_0; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_8() { return cLineFeedKeyword_8; }
		
		//pvdm+=Pourcent_vitesse_deplacement_max
		public Assignment getPvdmAssignment_9() { return cPvdmAssignment_9; }
		
		//Pourcent_vitesse_deplacement_max
		public RuleCall getPvdmPourcent_vitesse_deplacement_maxParserRuleCall_9_0() { return cPvdmPourcent_vitesse_deplacement_maxParserRuleCall_9_0; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_10() { return cLineFeedKeyword_10; }
		
		//pvrm+=Pourcent_vitesse_rotation_max
		public Assignment getPvrmAssignment_11() { return cPvrmAssignment_11; }
		
		//Pourcent_vitesse_rotation_max
		public RuleCall getPvrmPourcent_vitesse_rotation_maxParserRuleCall_11_0() { return cPvrmPourcent_vitesse_rotation_maxParserRuleCall_11_0; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_12() { return cLineFeedKeyword_12; }
		
		//hm+=Hauteur_max
		public Assignment getHmAssignment_13() { return cHmAssignment_13; }
		
		//Hauteur_max
		public RuleCall getHmHauteur_maxParserRuleCall_13_0() { return cHmHauteur_maxParserRuleCall_13_0; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_14() { return cLineFeedKeyword_14; }
		
		//em+=Eloignement_max
		public Assignment getEmAssignment_15() { return cEmAssignment_15; }
		
		//Eloignement_max
		public RuleCall getEmEloignement_maxParserRuleCall_15_0() { return cEmEloignement_maxParserRuleCall_15_0; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_16() { return cLineFeedKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
		
		//Start
		public RuleCall getStartParserRuleCall_18() { return cStartParserRuleCall_18; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_19() { return cLineFeedKeyword_19; }
		
		//(SeconDec+=IntDecl | PourDec+=PourcentDecl | statements+=Statement | fonctions+=FonctionCall | parallele+=(Parallele2 |
		//Parallele3))*
		public Alternatives getAlternatives_20() { return cAlternatives_20; }
		
		//SeconDec+=IntDecl
		public Assignment getSeconDecAssignment_20_0() { return cSeconDecAssignment_20_0; }
		
		//IntDecl
		public RuleCall getSeconDecIntDeclParserRuleCall_20_0_0() { return cSeconDecIntDeclParserRuleCall_20_0_0; }
		
		//PourDec+=PourcentDecl
		public Assignment getPourDecAssignment_20_1() { return cPourDecAssignment_20_1; }
		
		//PourcentDecl
		public RuleCall getPourDecPourcentDeclParserRuleCall_20_1_0() { return cPourDecPourcentDeclParserRuleCall_20_1_0; }
		
		//statements+=Statement
		public Assignment getStatementsAssignment_20_2() { return cStatementsAssignment_20_2; }
		
		//Statement
		public RuleCall getStatementsStatementParserRuleCall_20_2_0() { return cStatementsStatementParserRuleCall_20_2_0; }
		
		//fonctions+=FonctionCall
		public Assignment getFonctionsAssignment_20_3() { return cFonctionsAssignment_20_3; }
		
		//FonctionCall
		public RuleCall getFonctionsFonctionCallParserRuleCall_20_3_0() { return cFonctionsFonctionCallParserRuleCall_20_3_0; }
		
		//parallele+=(Parallele2 | Parallele3)
		public Assignment getParalleleAssignment_20_4() { return cParalleleAssignment_20_4; }
		
		//(Parallele2 | Parallele3)
		public Alternatives getParalleleAlternatives_20_4_0() { return cParalleleAlternatives_20_4_0; }
		
		//Parallele2
		public RuleCall getParalleleParallele2ParserRuleCall_20_4_0_0() { return cParalleleParallele2ParserRuleCall_20_4_0_0; }
		
		//Parallele3
		public RuleCall getParalleleParallele3ParserRuleCall_20_4_0_1() { return cParalleleParallele3ParserRuleCall_20_4_0_1; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_21() { return cLineFeedKeyword_21; }
		
		//End
		public RuleCall getEndParserRuleCall_22() { return cEndParserRuleCall_22; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_23() { return cLineFeedKeyword_23; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_24() { return cRightCurlyBracketKeyword_24; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_25() { return cLineFeedKeyword_25; }
		
		//fonctions+=FonctionDecl*
		public Assignment getFonctionsAssignment_26() { return cFonctionsAssignment_26; }
		
		//FonctionDecl
		public RuleCall getFonctionsFonctionDeclParserRuleCall_26_0() { return cFonctionsFonctionDeclParserRuleCall_26_0; }
		
		//'\n'*
		public Keyword getLineFeedKeyword_27() { return cLineFeedKeyword_27; }
	}
	public class IncludesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Includes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportURIAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportURIINCLUDETerminalRuleCall_2_0 = (RuleCall)cImportURIAssignment_2.eContents().get(0);
		private final Keyword cGreaterThanSignSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Includes:
		//	'import' '<' importURI=INCLUDE '>;';
		@Override public ParserRule getRule() { return rule; }
		
		//'import' '<' importURI=INCLUDE '>;'
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }
		
		//importURI=INCLUDE
		public Assignment getImportURIAssignment_2() { return cImportURIAssignment_2; }
		
		//INCLUDE
		public RuleCall getImportURIINCLUDETerminalRuleCall_2_0() { return cImportURIINCLUDETerminalRuleCall_2_0; }
		
		//'>;'
		public Keyword getGreaterThanSignSemicolonKeyword_3() { return cGreaterThanSignSemicolonKeyword_3; }
	}
	public class Pourcent_vitesse_hauteur_maxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Pourcent_vitesse_hauteur_max");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDef_pourcent_vitesse_hauteur_maxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVitesse_verticaleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVitesse_verticaleIntExpParserRuleCall_2_0 = (RuleCall)cVitesse_verticaleAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////Prologue
		//Pourcent_vitesse_hauteur_max:
		//	'def_pourcent_vitesse_hauteur_max' '('
		//	vitesse_verticale=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'def_pourcent_vitesse_hauteur_max' '(' vitesse_verticale=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'def_pourcent_vitesse_hauteur_max'
		public Keyword getDef_pourcent_vitesse_hauteur_maxKeyword_0() { return cDef_pourcent_vitesse_hauteur_maxKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//vitesse_verticale=IntExp
		public Assignment getVitesse_verticaleAssignment_2() { return cVitesse_verticaleAssignment_2; }
		
		//IntExp
		public RuleCall getVitesse_verticaleIntExpParserRuleCall_2_0() { return cVitesse_verticaleIntExpParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class Pourcent_vitesse_deplacement_maxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Pourcent_vitesse_deplacement_max");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDef_pourcent_vitesse_deplacement_maxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVitesse_deplacementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVitesse_deplacementIntExpParserRuleCall_2_0 = (RuleCall)cVitesse_deplacementAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Pourcent_vitesse_deplacement_max:
		//	'def_pourcent_vitesse_deplacement_max' '('
		//	vitesse_deplacement=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'def_pourcent_vitesse_deplacement_max' '(' vitesse_deplacement=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'def_pourcent_vitesse_deplacement_max'
		public Keyword getDef_pourcent_vitesse_deplacement_maxKeyword_0() { return cDef_pourcent_vitesse_deplacement_maxKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//vitesse_deplacement=IntExp
		public Assignment getVitesse_deplacementAssignment_2() { return cVitesse_deplacementAssignment_2; }
		
		//IntExp
		public RuleCall getVitesse_deplacementIntExpParserRuleCall_2_0() { return cVitesse_deplacementIntExpParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class Pourcent_vitesse_rotation_maxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Pourcent_vitesse_rotation_max");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDef_pourcent_vitesse_rotation_maxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVitesse_deplacementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVitesse_deplacementIntExpParserRuleCall_2_0 = (RuleCall)cVitesse_deplacementAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Pourcent_vitesse_rotation_max:
		//	'def_pourcent_vitesse_rotation_max' '('
		//	vitesse_deplacement=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'def_pourcent_vitesse_rotation_max' '(' vitesse_deplacement=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'def_pourcent_vitesse_rotation_max'
		public Keyword getDef_pourcent_vitesse_rotation_maxKeyword_0() { return cDef_pourcent_vitesse_rotation_maxKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//vitesse_deplacement=IntExp
		public Assignment getVitesse_deplacementAssignment_2() { return cVitesse_deplacementAssignment_2; }
		
		//IntExp
		public RuleCall getVitesse_deplacementIntExpParserRuleCall_2_0() { return cVitesse_deplacementIntExpParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class Hauteur_maxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Hauteur_max");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDef_hauteur_maxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHauteur_maxAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHauteur_maxIntExpParserRuleCall_2_0 = (RuleCall)cHauteur_maxAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Hauteur_max:
		//	'def_hauteur_max' '('
		//	hauteur_max=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'def_hauteur_max' '(' hauteur_max=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'def_hauteur_max'
		public Keyword getDef_hauteur_maxKeyword_0() { return cDef_hauteur_maxKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//hauteur_max=IntExp
		public Assignment getHauteur_maxAssignment_2() { return cHauteur_maxAssignment_2; }
		
		//IntExp
		public RuleCall getHauteur_maxIntExpParserRuleCall_2_0() { return cHauteur_maxIntExpParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class Eloignement_maxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Eloignement_max");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDef_eloignement_maxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHauteur_maxAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHauteur_maxIntExpParserRuleCall_2_0 = (RuleCall)cHauteur_maxAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Eloignement_max:
		//	'def_eloignement_max' '('
		//	hauteur_max=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'def_eloignement_max' '(' hauteur_max=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'def_eloignement_max'
		public Keyword getDef_eloignement_maxKeyword_0() { return cDef_eloignement_maxKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//hauteur_max=IntExp
		public Assignment getHauteur_maxAssignment_2() { return cHauteur_maxAssignment_2; }
		
		//IntExp
		public RuleCall getHauteur_maxIntExpParserRuleCall_2_0() { return cHauteur_maxIntExpParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class DecollerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Decoller");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDecollerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Decoller:
		//	'decoller' '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'decoller' '(' ')'
		public Group getGroup() { return cGroup; }
		
		//'decoller'
		public Keyword getDecollerKeyword_0() { return cDecollerKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class AtterrirElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Atterrir");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAtterrirKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Atterrir:
		//	'atterrir' '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'atterrir' '(' ')'
		public Group getGroup() { return cGroup; }
		
		//'atterrir'
		public Keyword getAtterrirKeyword_0() { return cAtterrirKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class MonterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Monter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_verticaleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_verticaleIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_verticaleAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Monter:
		//	'monter' '('
		//	duree=IntExp ','
		//	vitesse_verticale=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'monter' '(' duree=IntExp ',' vitesse_verticale=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'monter'
		public Keyword getMonterKeyword_0() { return cMonterKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_verticale=IntExp
		public Assignment getVitesse_verticaleAssignment_4() { return cVitesse_verticaleAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_verticaleIntExpParserRuleCall_4_0() { return cVitesse_verticaleIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class DescendreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Descendre");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescendreKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_verticaleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_verticaleIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_verticaleAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Descendre:
		//	'descendre' '('
		//	duree=IntExp ','
		//	vitesse_verticale=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'descendre' '(' duree=IntExp ',' vitesse_verticale=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'descendre'
		public Keyword getDescendreKeyword_0() { return cDescendreKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_verticale=IntExp
		public Assignment getVitesse_verticaleAssignment_4() { return cVitesse_verticaleAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_verticaleIntExpParserRuleCall_4_0() { return cVitesse_verticaleIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class AvancerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Avancer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAvancerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_deplacementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_deplacementIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_deplacementAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Avancer:
		//	'avancer' '('
		//	duree=IntExp ','
		//	vitesse_deplacement=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'avancer' '(' duree=IntExp ',' vitesse_deplacement=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'avancer'
		public Keyword getAvancerKeyword_0() { return cAvancerKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_deplacement=IntExp
		public Assignment getVitesse_deplacementAssignment_4() { return cVitesse_deplacementAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_deplacementIntExpParserRuleCall_4_0() { return cVitesse_deplacementIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ReculerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Reculer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReculerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_deplacementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_deplacementIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_deplacementAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Reculer:
		//	'reculer' '('
		//	duree=IntExp ','
		//	vitesse_deplacement=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'reculer' '(' duree=IntExp ',' vitesse_deplacement=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'reculer'
		public Keyword getReculerKeyword_0() { return cReculerKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_deplacement=IntExp
		public Assignment getVitesse_deplacementAssignment_4() { return cVitesse_deplacementAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_deplacementIntExpParserRuleCall_4_0() { return cVitesse_deplacementIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class GaucheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Gauche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGaucheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_deplacementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_deplacementIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_deplacementAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Gauche:
		//	'gauche' '('
		//	duree=IntExp ','
		//	vitesse_deplacement=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'gauche' '(' duree=IntExp ',' vitesse_deplacement=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'gauche'
		public Keyword getGaucheKeyword_0() { return cGaucheKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_deplacement=IntExp
		public Assignment getVitesse_deplacementAssignment_4() { return cVitesse_deplacementAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_deplacementIntExpParserRuleCall_4_0() { return cVitesse_deplacementIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class DroiteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Droite");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDroiteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_deplacementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_deplacementIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_deplacementAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Droite:
		//	'droite' '('
		//	duree=IntExp ','
		//	vitesse_deplacement=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'droite' '(' duree=IntExp ',' vitesse_deplacement=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'droite'
		public Keyword getDroiteKeyword_0() { return cDroiteKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_deplacement=IntExp
		public Assignment getVitesse_deplacementAssignment_4() { return cVitesse_deplacementAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_deplacementIntExpParserRuleCall_4_0() { return cVitesse_deplacementIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class PauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Pause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDroiteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Pause:
		//	'droite' '('
		//	duree=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'droite' '(' duree=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'droite'
		public Keyword getDroiteKeyword_0() { return cDroiteKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class RotationGaucheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.RotationGauche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRotation_gaucheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_rotationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_rotationIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_rotationAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RotationGauche:
		//	'rotation_gauche' '('
		//	duree=IntExp ','
		//	vitesse_rotation=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'rotation_gauche' '(' duree=IntExp ',' vitesse_rotation=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'rotation_gauche'
		public Keyword getRotation_gaucheKeyword_0() { return cRotation_gaucheKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_rotation=IntExp
		public Assignment getVitesse_rotationAssignment_4() { return cVitesse_rotationAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_rotationIntExpParserRuleCall_4_0() { return cVitesse_rotationIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class RotationDroiteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.RotationDroite");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRotation_droiteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDureeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDureeIntExpParserRuleCall_2_0 = (RuleCall)cDureeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitesse_rotationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitesse_rotationIntExpParserRuleCall_4_0 = (RuleCall)cVitesse_rotationAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RotationDroite:
		//	'rotation_droite' '('
		//	duree=IntExp ','
		//	vitesse_rotation=IntExp
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'rotation_droite' '(' duree=IntExp ',' vitesse_rotation=IntExp ')'
		public Group getGroup() { return cGroup; }
		
		//'rotation_droite'
		public Keyword getRotation_droiteKeyword_0() { return cRotation_droiteKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//duree=IntExp
		public Assignment getDureeAssignment_2() { return cDureeAssignment_2; }
		
		//IntExp
		public RuleCall getDureeIntExpParserRuleCall_2_0() { return cDureeIntExpParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//vitesse_rotation=IntExp
		public Assignment getVitesse_rotationAssignment_4() { return cVitesse_rotationAssignment_4; }
		
		//IntExp
		public RuleCall getVitesse_rotationIntExpParserRuleCall_4_0() { return cVitesse_rotationIntExpParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class StartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Start");
		private final RuleCall cDecollerParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Start:
		//	Decoller;
		@Override public ParserRule getRule() { return rule; }
		
		//Decoller
		public RuleCall getDecollerParserRuleCall() { return cDecollerParserRuleCall; }
	}
	public class EndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.End");
		private final RuleCall cAtterrirParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//End:
		//	Atterrir;
		@Override public ParserRule getRule() { return rule; }
		
		//Atterrir
		public RuleCall getAtterrirParserRuleCall() { return cAtterrirParserRuleCall; }
	}
	public class StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Statement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAvancerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDescendreParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRotationDroiteParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRotationGaucheParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPauseParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDroiteParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGaucheParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cReculerParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cMonterParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//Statement:
		//	Avancer | Descendre | RotationDroite | RotationGauche | Pause | Droite | Gauche | Reculer | Monter;
		@Override public ParserRule getRule() { return rule; }
		
		//Avancer | Descendre | RotationDroite | RotationGauche | Pause | Droite | Gauche | Reculer | Monter
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Avancer
		public RuleCall getAvancerParserRuleCall_0() { return cAvancerParserRuleCall_0; }
		
		//Descendre
		public RuleCall getDescendreParserRuleCall_1() { return cDescendreParserRuleCall_1; }
		
		//RotationDroite
		public RuleCall getRotationDroiteParserRuleCall_2() { return cRotationDroiteParserRuleCall_2; }
		
		//RotationGauche
		public RuleCall getRotationGaucheParserRuleCall_3() { return cRotationGaucheParserRuleCall_3; }
		
		//Pause
		public RuleCall getPauseParserRuleCall_4() { return cPauseParserRuleCall_4; }
		
		//Droite
		public RuleCall getDroiteParserRuleCall_5() { return cDroiteParserRuleCall_5; }
		
		//Gauche
		public RuleCall getGaucheParserRuleCall_6() { return cGaucheParserRuleCall_6; }
		
		//Reculer
		public RuleCall getReculerParserRuleCall_7() { return cReculerParserRuleCall_7; }
		
		//Monter
		public RuleCall getMonterParserRuleCall_8() { return cMonterParserRuleCall_8; }
	}
	public class FonctionDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.FonctionDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFuncKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBodyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBodyStatementParserRuleCall_5_0 = (RuleCall)cBodyAssignment_5.eContents().get(0);
		private final Keyword cLineFeedKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//FonctionDecl:
		//	'func' name=ID '(' ')' '{' body+=Statement* '\n' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'func' name=ID '(' ')' '{' body+=Statement* '\n' '}'
		public Group getGroup() { return cGroup; }
		
		//'func'
		public Keyword getFuncKeyword_0() { return cFuncKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//body+=Statement*
		public Assignment getBodyAssignment_5() { return cBodyAssignment_5; }
		
		//Statement
		public RuleCall getBodyStatementParserRuleCall_5_0() { return cBodyStatementParserRuleCall_5_0; }
		
		//'\n'
		public Keyword getLineFeedKeyword_6() { return cLineFeedKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class IntConstanteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.IntConstante");
		private final Assignment cValAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValINTTerminalRuleCall_0 = (RuleCall)cValAssignment.eContents().get(0);
		
		//IntConstante:
		//	val=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//val=INT
		public Assignment getValAssignment() { return cValAssignment; }
		
		//INT
		public RuleCall getValINTTerminalRuleCall_0() { return cValINTTerminalRuleCall_0; }
	}
	public class IntDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.IntDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSecondeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValIntExpParserRuleCall_3_0 = (RuleCall)cValAssignment_3.eContents().get(0);
		
		//IntDecl:
		//	'Seconde' name=ID '=' val=IntExp;
		@Override public ParserRule getRule() { return rule; }
		
		//'Seconde' name=ID '=' val=IntExp
		public Group getGroup() { return cGroup; }
		
		//'Seconde'
		public Keyword getSecondeKeyword_0() { return cSecondeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//val=IntExp
		public Assignment getValAssignment_3() { return cValAssignment_3; }
		
		//IntExp
		public RuleCall getValIntExpParserRuleCall_3_0() { return cValIntExpParserRuleCall_3_0; }
	}
	public class PourcentDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.PourcentDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPourcentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValIntExpParserRuleCall_3_0 = (RuleCall)cValAssignment_3.eContents().get(0);
		
		//PourcentDecl:
		//	'Pourcent' name=ID '=' val=IntExp;
		@Override public ParserRule getRule() { return rule; }
		
		//'Pourcent' name=ID '=' val=IntExp
		public Group getGroup() { return cGroup; }
		
		//'Pourcent'
		public Keyword getPourcentKeyword_0() { return cPourcentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//val=IntExp
		public Assignment getValAssignment_3() { return cValAssignment_3; }
		
		//IntExp
		public RuleCall getValIntExpParserRuleCall_3_0() { return cValIntExpParserRuleCall_3_0; }
	}
	public class RefIntVarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.RefIntVar");
		private final Assignment cVarAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cVarIntDeclCrossReference_0 = (CrossReference)cVarAssignment.eContents().get(0);
		private final RuleCall cVarIntDeclIDTerminalRuleCall_0_1 = (RuleCall)cVarIntDeclCrossReference_0.eContents().get(1);
		
		//RefIntVar:
		//	var=[IntDecl];
		@Override public ParserRule getRule() { return rule; }
		
		//var=[IntDecl]
		public Assignment getVarAssignment() { return cVarAssignment; }
		
		//[IntDecl]
		public CrossReference getVarIntDeclCrossReference_0() { return cVarIntDeclCrossReference_0; }
		
		//ID
		public RuleCall getVarIntDeclIDTerminalRuleCall_0_1() { return cVarIntDeclIDTerminalRuleCall_0_1; }
	}
	public class IntExpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.IntExp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntConstanteParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRefIntVarParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//IntExp:
		//	IntConstante | RefIntVar;
		@Override public ParserRule getRule() { return rule; }
		
		//IntConstante | RefIntVar
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntConstante
		public RuleCall getIntConstanteParserRuleCall_0() { return cIntConstanteParserRuleCall_0; }
		
		//RefIntVar
		public RuleCall getRefIntVarParserRuleCall_1() { return cRefIntVarParserRuleCall_1; }
	}
	public class FonctionCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.FonctionCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFuncAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cFuncFonctionDeclCrossReference_0_0 = (CrossReference)cFuncAssignment_0.eContents().get(0);
		private final RuleCall cFuncFonctionDeclIDTerminalRuleCall_0_0_1 = (RuleCall)cFuncFonctionDeclCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FonctionCall:
		//	func=[FonctionDecl] '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//func=[FonctionDecl] '(' ')'
		public Group getGroup() { return cGroup; }
		
		//func=[FonctionDecl]
		public Assignment getFuncAssignment_0() { return cFuncAssignment_0; }
		
		//[FonctionDecl]
		public CrossReference getFuncFonctionDeclCrossReference_0_0() { return cFuncFonctionDeclCrossReference_0_0; }
		
		//ID
		public RuleCall getFuncFonctionDeclIDTerminalRuleCall_0_0_1() { return cFuncFonctionDeclIDTerminalRuleCall_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class MDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.MD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMonterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDescendreParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MD:
		//	Monter | Descendre;
		@Override public ParserRule getRule() { return rule; }
		
		//Monter | Descendre
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Monter
		public RuleCall getMonterParserRuleCall_0() { return cMonterParserRuleCall_0; }
		
		//Descendre
		public RuleCall getDescendreParserRuleCall_1() { return cDescendreParserRuleCall_1; }
	}
	public class GDrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.GDr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGaucheParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDroiteParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GDr:
		//	Gauche | Droite;
		@Override public ParserRule getRule() { return rule; }
		
		//Gauche | Droite
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Gauche
		public RuleCall getGaucheParserRuleCall_0() { return cGaucheParserRuleCall_0; }
		
		//Droite
		public RuleCall getDroiteParserRuleCall_1() { return cDroiteParserRuleCall_1; }
	}
	public class RGRDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.RGRD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRotationGaucheParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRotationDroiteParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RGRD:
		//	RotationGauche | RotationDroite;
		@Override public ParserRule getRule() { return rule; }
		
		//RotationGauche | RotationDroite
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RotationGauche
		public RuleCall getRotationGaucheParserRuleCall_0() { return cRotationGaucheParserRuleCall_0; }
		
		//RotationDroite
		public RuleCall getRotationDroiteParserRuleCall_1() { return cRotationDroiteParserRuleCall_1; }
	}
	public class ARElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.AR");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAvancerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReculerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AR:
		//	Avancer | Reculer;
		@Override public ParserRule getRule() { return rule; }
		
		//Avancer | Reculer
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Avancer
		public RuleCall getAvancerParserRuleCall_0() { return cAvancerParserRuleCall_0; }
		
		//Reculer
		public RuleCall getReculerParserRuleCall_1() { return cReculerParserRuleCall_1; }
	}
	public class Parallele2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Parallele2");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cAAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_0_0_0 = (RuleCall)cAAssignment_0_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cTGDrParserRuleCall_0_2_0 = (RuleCall)cTAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cAAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_1_0_0 = (RuleCall)cAAssignment_1_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cTARParserRuleCall_1_2_0 = (RuleCall)cTAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cAAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_2_0_0 = (RuleCall)cAAssignment_2_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTRGRDParserRuleCall_2_2_0 = (RuleCall)cTAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cTAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cTGDrParserRuleCall_3_0_0 = (RuleCall)cTAssignment_3_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cBAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cBARParserRuleCall_3_2_0 = (RuleCall)cBAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cTAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cTGDrParserRuleCall_4_0_0 = (RuleCall)cTAssignment_4_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cBAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cBMDParserRuleCall_4_2_0 = (RuleCall)cBAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cTAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cTGDrParserRuleCall_5_0_0 = (RuleCall)cTAssignment_5_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cBAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cBRGRDParserRuleCall_5_2_0 = (RuleCall)cBAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cTAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cTRGRDParserRuleCall_6_0_0 = (RuleCall)cTAssignment_6_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAMDParserRuleCall_6_2_0 = (RuleCall)cAAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cTAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cTRGRDParserRuleCall_7_0_0 = (RuleCall)cTAssignment_7_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cAAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAARParserRuleCall_7_2_0 = (RuleCall)cAAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cTAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cTRGRDParserRuleCall_8_0_0 = (RuleCall)cTAssignment_8_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cAAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cAGDrParserRuleCall_8_2_0 = (RuleCall)cAAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cTAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cTARParserRuleCall_9_0_0 = (RuleCall)cTAssignment_9_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cAAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cAMDParserRuleCall_9_2_0 = (RuleCall)cAAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cTAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cTARParserRuleCall_10_0_0 = (RuleCall)cTAssignment_10_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cAAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cARGRDParserRuleCall_10_2_0 = (RuleCall)cAAssignment_10_2.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Assignment cTAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final RuleCall cTARParserRuleCall_11_0_0 = (RuleCall)cTAssignment_11_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cAAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cAGDrParserRuleCall_11_2_0 = (RuleCall)cAAssignment_11_2.eContents().get(0);
		
		//Parallele2:
		//	a=MD '&' t=GDr | a=MD '&' t=AR | a=MD '&' t=RGRD | t=GDr '&' b=AR | t=GDr '&' b=MD | t=GDr '&' b=RGRD | t=RGRD '&'
		//	a=MD | t=RGRD '&' a=AR | t=RGRD '&' a=GDr | t=AR '&' a=MD | t=AR '&' a=RGRD | t=AR '&' a=GDr;
		@Override public ParserRule getRule() { return rule; }
		
		//a=MD '&' t=GDr | a=MD '&' t=AR | a=MD '&' t=RGRD | t=GDr '&' b=AR | t=GDr '&' b=MD | t=GDr '&' b=RGRD | t=RGRD '&' a=MD
		//| t=RGRD '&' a=AR | t=RGRD '&' a=GDr | t=AR '&' a=MD | t=AR '&' a=RGRD | t=AR '&' a=GDr
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//a=MD '&' t=GDr
		public Group getGroup_0() { return cGroup_0; }
		
		//a=MD
		public Assignment getAAssignment_0_0() { return cAAssignment_0_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_0_0_0() { return cAMDParserRuleCall_0_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_0_1() { return cAmpersandKeyword_0_1; }
		
		//t=GDr
		public Assignment getTAssignment_0_2() { return cTAssignment_0_2; }
		
		//GDr
		public RuleCall getTGDrParserRuleCall_0_2_0() { return cTGDrParserRuleCall_0_2_0; }
		
		//a=MD '&' t=AR
		public Group getGroup_1() { return cGroup_1; }
		
		//a=MD
		public Assignment getAAssignment_1_0() { return cAAssignment_1_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_1_0_0() { return cAMDParserRuleCall_1_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_1_1() { return cAmpersandKeyword_1_1; }
		
		//t=AR
		public Assignment getTAssignment_1_2() { return cTAssignment_1_2; }
		
		//AR
		public RuleCall getTARParserRuleCall_1_2_0() { return cTARParserRuleCall_1_2_0; }
		
		//a=MD '&' t=RGRD
		public Group getGroup_2() { return cGroup_2; }
		
		//a=MD
		public Assignment getAAssignment_2_0() { return cAAssignment_2_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_2_0_0() { return cAMDParserRuleCall_2_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_2_1() { return cAmpersandKeyword_2_1; }
		
		//t=RGRD
		public Assignment getTAssignment_2_2() { return cTAssignment_2_2; }
		
		//RGRD
		public RuleCall getTRGRDParserRuleCall_2_2_0() { return cTRGRDParserRuleCall_2_2_0; }
		
		//t=GDr '&' b=AR
		public Group getGroup_3() { return cGroup_3; }
		
		//t=GDr
		public Assignment getTAssignment_3_0() { return cTAssignment_3_0; }
		
		//GDr
		public RuleCall getTGDrParserRuleCall_3_0_0() { return cTGDrParserRuleCall_3_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_3_1() { return cAmpersandKeyword_3_1; }
		
		//b=AR
		public Assignment getBAssignment_3_2() { return cBAssignment_3_2; }
		
		//AR
		public RuleCall getBARParserRuleCall_3_2_0() { return cBARParserRuleCall_3_2_0; }
		
		//t=GDr '&' b=MD
		public Group getGroup_4() { return cGroup_4; }
		
		//t=GDr
		public Assignment getTAssignment_4_0() { return cTAssignment_4_0; }
		
		//GDr
		public RuleCall getTGDrParserRuleCall_4_0_0() { return cTGDrParserRuleCall_4_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_4_1() { return cAmpersandKeyword_4_1; }
		
		//b=MD
		public Assignment getBAssignment_4_2() { return cBAssignment_4_2; }
		
		//MD
		public RuleCall getBMDParserRuleCall_4_2_0() { return cBMDParserRuleCall_4_2_0; }
		
		//t=GDr '&' b=RGRD
		public Group getGroup_5() { return cGroup_5; }
		
		//t=GDr
		public Assignment getTAssignment_5_0() { return cTAssignment_5_0; }
		
		//GDr
		public RuleCall getTGDrParserRuleCall_5_0_0() { return cTGDrParserRuleCall_5_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_5_1() { return cAmpersandKeyword_5_1; }
		
		//b=RGRD
		public Assignment getBAssignment_5_2() { return cBAssignment_5_2; }
		
		//RGRD
		public RuleCall getBRGRDParserRuleCall_5_2_0() { return cBRGRDParserRuleCall_5_2_0; }
		
		//t=RGRD '&' a=MD
		public Group getGroup_6() { return cGroup_6; }
		
		//t=RGRD
		public Assignment getTAssignment_6_0() { return cTAssignment_6_0; }
		
		//RGRD
		public RuleCall getTRGRDParserRuleCall_6_0_0() { return cTRGRDParserRuleCall_6_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_6_1() { return cAmpersandKeyword_6_1; }
		
		//a=MD
		public Assignment getAAssignment_6_2() { return cAAssignment_6_2; }
		
		//MD
		public RuleCall getAMDParserRuleCall_6_2_0() { return cAMDParserRuleCall_6_2_0; }
		
		//t=RGRD '&' a=AR
		public Group getGroup_7() { return cGroup_7; }
		
		//t=RGRD
		public Assignment getTAssignment_7_0() { return cTAssignment_7_0; }
		
		//RGRD
		public RuleCall getTRGRDParserRuleCall_7_0_0() { return cTRGRDParserRuleCall_7_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_7_1() { return cAmpersandKeyword_7_1; }
		
		//a=AR
		public Assignment getAAssignment_7_2() { return cAAssignment_7_2; }
		
		//AR
		public RuleCall getAARParserRuleCall_7_2_0() { return cAARParserRuleCall_7_2_0; }
		
		//t=RGRD '&' a=GDr
		public Group getGroup_8() { return cGroup_8; }
		
		//t=RGRD
		public Assignment getTAssignment_8_0() { return cTAssignment_8_0; }
		
		//RGRD
		public RuleCall getTRGRDParserRuleCall_8_0_0() { return cTRGRDParserRuleCall_8_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_8_1() { return cAmpersandKeyword_8_1; }
		
		//a=GDr
		public Assignment getAAssignment_8_2() { return cAAssignment_8_2; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_8_2_0() { return cAGDrParserRuleCall_8_2_0; }
		
		//t=AR '&' a=MD
		public Group getGroup_9() { return cGroup_9; }
		
		//t=AR
		public Assignment getTAssignment_9_0() { return cTAssignment_9_0; }
		
		//AR
		public RuleCall getTARParserRuleCall_9_0_0() { return cTARParserRuleCall_9_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_9_1() { return cAmpersandKeyword_9_1; }
		
		//a=MD
		public Assignment getAAssignment_9_2() { return cAAssignment_9_2; }
		
		//MD
		public RuleCall getAMDParserRuleCall_9_2_0() { return cAMDParserRuleCall_9_2_0; }
		
		//t=AR '&' a=RGRD
		public Group getGroup_10() { return cGroup_10; }
		
		//t=AR
		public Assignment getTAssignment_10_0() { return cTAssignment_10_0; }
		
		//AR
		public RuleCall getTARParserRuleCall_10_0_0() { return cTARParserRuleCall_10_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_10_1() { return cAmpersandKeyword_10_1; }
		
		//a=RGRD
		public Assignment getAAssignment_10_2() { return cAAssignment_10_2; }
		
		//RGRD
		public RuleCall getARGRDParserRuleCall_10_2_0() { return cARGRDParserRuleCall_10_2_0; }
		
		//t=AR '&' a=GDr
		public Group getGroup_11() { return cGroup_11; }
		
		//t=AR
		public Assignment getTAssignment_11_0() { return cTAssignment_11_0; }
		
		//AR
		public RuleCall getTARParserRuleCall_11_0_0() { return cTARParserRuleCall_11_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_11_1() { return cAmpersandKeyword_11_1; }
		
		//a=GDr
		public Assignment getAAssignment_11_2() { return cAAssignment_11_2; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_11_2_0() { return cAGDrParserRuleCall_11_2_0; }
	}
	public class Parallele3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.Parallele3");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cAAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cAARParserRuleCall_0_0_0 = (RuleCall)cAAssignment_0_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cBAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cBGDrParserRuleCall_0_2_0 = (RuleCall)cBAssignment_0_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cCAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cCMDParserRuleCall_0_4_0 = (RuleCall)cCAssignment_0_4.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cAAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAARParserRuleCall_1_0_0 = (RuleCall)cAAssignment_1_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cBAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cBGDrParserRuleCall_1_2_0 = (RuleCall)cBAssignment_1_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cCAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cCRGRDParserRuleCall_1_4_0 = (RuleCall)cCAssignment_1_4.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cAAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cAARParserRuleCall_2_0_0 = (RuleCall)cAAssignment_2_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cBAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cBMDParserRuleCall_2_2_0 = (RuleCall)cBAssignment_2_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cCAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cCGDrParserRuleCall_2_4_0 = (RuleCall)cCAssignment_2_4.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cAAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cAARParserRuleCall_3_0_0 = (RuleCall)cAAssignment_3_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cBAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cBMDParserRuleCall_3_2_0 = (RuleCall)cBAssignment_3_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cCAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cCRGRDParserRuleCall_3_4_0 = (RuleCall)cCAssignment_3_4.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cAAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cAARParserRuleCall_4_0_0 = (RuleCall)cAAssignment_4_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cBAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cBRGRDParserRuleCall_4_2_0 = (RuleCall)cBAssignment_4_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cCAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final RuleCall cCMDParserRuleCall_4_4_0 = (RuleCall)cCAssignment_4_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cAAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cAARParserRuleCall_5_0_0 = (RuleCall)cAAssignment_5_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cBAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cBRGRDParserRuleCall_5_2_0 = (RuleCall)cBAssignment_5_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cCAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cCGDrParserRuleCall_5_4_0 = (RuleCall)cCAssignment_5_4.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cAAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cAGDrParserRuleCall_6_0_0 = (RuleCall)cAAssignment_6_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cBAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cBARParserRuleCall_6_2_0 = (RuleCall)cBAssignment_6_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cCAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final RuleCall cCMDParserRuleCall_6_4_0 = (RuleCall)cCAssignment_6_4.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cAAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cAGDrParserRuleCall_7_0_0 = (RuleCall)cAAssignment_7_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cBAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cBARParserRuleCall_7_2_0 = (RuleCall)cBAssignment_7_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Assignment cCAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cCRGRDParserRuleCall_7_4_0 = (RuleCall)cCAssignment_7_4.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cAAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cAGDrParserRuleCall_8_0_0 = (RuleCall)cAAssignment_8_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cBAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cBMDParserRuleCall_8_2_0 = (RuleCall)cBAssignment_8_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Assignment cCAssignment_8_4 = (Assignment)cGroup_8.eContents().get(4);
		private final RuleCall cCARParserRuleCall_8_4_0 = (RuleCall)cCAssignment_8_4.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cAAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cAGDrParserRuleCall_9_0_0 = (RuleCall)cAAssignment_9_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cBAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cBMDParserRuleCall_9_2_0 = (RuleCall)cBAssignment_9_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Assignment cCAssignment_9_4 = (Assignment)cGroup_9.eContents().get(4);
		private final RuleCall cCRGRDParserRuleCall_9_4_0 = (RuleCall)cCAssignment_9_4.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cAAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cAGDrParserRuleCall_10_0_0 = (RuleCall)cAAssignment_10_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cBAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cBRGRDParserRuleCall_10_2_0 = (RuleCall)cBAssignment_10_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Assignment cCAssignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cCARParserRuleCall_10_4_0 = (RuleCall)cCAssignment_10_4.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Assignment cAAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final RuleCall cAGDrParserRuleCall_11_0_0 = (RuleCall)cAAssignment_11_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cBAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cBRGRDParserRuleCall_11_2_0 = (RuleCall)cBAssignment_11_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Assignment cCAssignment_11_4 = (Assignment)cGroup_11.eContents().get(4);
		private final RuleCall cCMDParserRuleCall_11_4_0 = (RuleCall)cCAssignment_11_4.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Assignment cAAssignment_12_0 = (Assignment)cGroup_12.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_12_0_0 = (RuleCall)cAAssignment_12_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cBAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cBARParserRuleCall_12_2_0 = (RuleCall)cBAssignment_12_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Assignment cCAssignment_12_4 = (Assignment)cGroup_12.eContents().get(4);
		private final RuleCall cCGDrParserRuleCall_12_4_0 = (RuleCall)cCAssignment_12_4.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Assignment cAAssignment_13_0 = (Assignment)cGroup_13.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_13_0_0 = (RuleCall)cAAssignment_13_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cBAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cBARParserRuleCall_13_2_0 = (RuleCall)cBAssignment_13_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_13_3 = (Keyword)cGroup_13.eContents().get(3);
		private final Assignment cCAssignment_13_4 = (Assignment)cGroup_13.eContents().get(4);
		private final RuleCall cCRGRDParserRuleCall_13_4_0 = (RuleCall)cCAssignment_13_4.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cAAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_14_0_0 = (RuleCall)cAAssignment_14_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cBAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cBGDrParserRuleCall_14_2_0 = (RuleCall)cBAssignment_14_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_14_3 = (Keyword)cGroup_14.eContents().get(3);
		private final Assignment cCAssignment_14_4 = (Assignment)cGroup_14.eContents().get(4);
		private final RuleCall cCARParserRuleCall_14_4_0 = (RuleCall)cCAssignment_14_4.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cAAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_15_0_0 = (RuleCall)cAAssignment_15_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cBAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cBGDrParserRuleCall_15_2_0 = (RuleCall)cBAssignment_15_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		private final Assignment cCAssignment_15_4 = (Assignment)cGroup_15.eContents().get(4);
		private final RuleCall cCRGRDParserRuleCall_15_4_0 = (RuleCall)cCAssignment_15_4.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cAAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_16_0_0 = (RuleCall)cAAssignment_16_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cBAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final RuleCall cBRGRDParserRuleCall_16_2_0 = (RuleCall)cBAssignment_16_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Assignment cCAssignment_16_4 = (Assignment)cGroup_16.eContents().get(4);
		private final RuleCall cCGDrParserRuleCall_16_4_0 = (RuleCall)cCAssignment_16_4.eContents().get(0);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Assignment cAAssignment_17_0 = (Assignment)cGroup_17.eContents().get(0);
		private final RuleCall cAMDParserRuleCall_17_0_0 = (RuleCall)cAAssignment_17_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Assignment cBAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final RuleCall cBRGRDParserRuleCall_17_2_0 = (RuleCall)cBAssignment_17_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_17_3 = (Keyword)cGroup_17.eContents().get(3);
		private final Assignment cCAssignment_17_4 = (Assignment)cGroup_17.eContents().get(4);
		private final RuleCall cCARParserRuleCall_17_4_0 = (RuleCall)cCAssignment_17_4.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cAAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final RuleCall cARGRDParserRuleCall_18_0_0 = (RuleCall)cAAssignment_18_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cBAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cBARParserRuleCall_18_2_0 = (RuleCall)cBAssignment_18_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_18_3 = (Keyword)cGroup_18.eContents().get(3);
		private final Assignment cCAssignment_18_4 = (Assignment)cGroup_18.eContents().get(4);
		private final RuleCall cCMDParserRuleCall_18_4_0 = (RuleCall)cCAssignment_18_4.eContents().get(0);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Assignment cAAssignment_19_0 = (Assignment)cGroup_19.eContents().get(0);
		private final RuleCall cARGRDParserRuleCall_19_0_0 = (RuleCall)cAAssignment_19_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Assignment cBAssignment_19_2 = (Assignment)cGroup_19.eContents().get(2);
		private final RuleCall cBARParserRuleCall_19_2_0 = (RuleCall)cBAssignment_19_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_19_3 = (Keyword)cGroup_19.eContents().get(3);
		private final Assignment cCAssignment_19_4 = (Assignment)cGroup_19.eContents().get(4);
		private final RuleCall cCGDrParserRuleCall_19_4_0 = (RuleCall)cCAssignment_19_4.eContents().get(0);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Assignment cAAssignment_20_0 = (Assignment)cGroup_20.eContents().get(0);
		private final RuleCall cARGRDParserRuleCall_20_0_0 = (RuleCall)cAAssignment_20_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		private final Assignment cBAssignment_20_2 = (Assignment)cGroup_20.eContents().get(2);
		private final RuleCall cBMDParserRuleCall_20_2_0 = (RuleCall)cBAssignment_20_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_20_3 = (Keyword)cGroup_20.eContents().get(3);
		private final Assignment cCAssignment_20_4 = (Assignment)cGroup_20.eContents().get(4);
		private final RuleCall cCARParserRuleCall_20_4_0 = (RuleCall)cCAssignment_20_4.eContents().get(0);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Assignment cAAssignment_21_0 = (Assignment)cGroup_21.eContents().get(0);
		private final RuleCall cARGRDParserRuleCall_21_0_0 = (RuleCall)cAAssignment_21_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_21_1 = (Keyword)cGroup_21.eContents().get(1);
		private final Assignment cBAssignment_21_2 = (Assignment)cGroup_21.eContents().get(2);
		private final RuleCall cBMDParserRuleCall_21_2_0 = (RuleCall)cBAssignment_21_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_21_3 = (Keyword)cGroup_21.eContents().get(3);
		private final Assignment cCAssignment_21_4 = (Assignment)cGroup_21.eContents().get(4);
		private final RuleCall cCGDrParserRuleCall_21_4_0 = (RuleCall)cCAssignment_21_4.eContents().get(0);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Assignment cAAssignment_22_0 = (Assignment)cGroup_22.eContents().get(0);
		private final RuleCall cARGRDParserRuleCall_22_0_0 = (RuleCall)cAAssignment_22_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_22_1 = (Keyword)cGroup_22.eContents().get(1);
		private final Assignment cBAssignment_22_2 = (Assignment)cGroup_22.eContents().get(2);
		private final RuleCall cBGDrParserRuleCall_22_2_0 = (RuleCall)cBAssignment_22_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_22_3 = (Keyword)cGroup_22.eContents().get(3);
		private final Assignment cCAssignment_22_4 = (Assignment)cGroup_22.eContents().get(4);
		private final RuleCall cCMDParserRuleCall_22_4_0 = (RuleCall)cCAssignment_22_4.eContents().get(0);
		private final Group cGroup_23 = (Group)cAlternatives.eContents().get(23);
		private final Assignment cAAssignment_23_0 = (Assignment)cGroup_23.eContents().get(0);
		private final RuleCall cARGRDParserRuleCall_23_0_0 = (RuleCall)cAAssignment_23_0.eContents().get(0);
		private final Keyword cAmpersandKeyword_23_1 = (Keyword)cGroup_23.eContents().get(1);
		private final Assignment cBAssignment_23_2 = (Assignment)cGroup_23.eContents().get(2);
		private final RuleCall cBGDrParserRuleCall_23_2_0 = (RuleCall)cBAssignment_23_2.eContents().get(0);
		private final Keyword cAmpersandKeyword_23_3 = (Keyword)cGroup_23.eContents().get(3);
		private final Assignment cCAssignment_23_4 = (Assignment)cGroup_23.eContents().get(4);
		private final RuleCall cCARParserRuleCall_23_4_0 = (RuleCall)cCAssignment_23_4.eContents().get(0);
		
		//Parallele3:
		//	a=AR '&' b=GDr '&' c=MD | a=AR '&' b=GDr '&' c=RGRD | a=AR '&' b=MD '&' c=GDr | a=AR '&' b=MD '&' c=RGRD | a=AR '&'
		//	b=RGRD '&' c=MD | a=AR '&' b=RGRD '&' c=GDr | a=GDr '&' b=AR '&' c=MD | a=GDr '&' b=AR '&' c=RGRD | a=GDr '&' b=MD '&'
		//	c=AR | a=GDr '&' b=MD '&' c=RGRD | a=GDr '&' b=RGRD '&' c=AR | a=GDr '&' b=RGRD '&' c=MD | a=MD '&' b=AR '&' c=GDr |
		//	a=MD '&' b=AR '&' c=RGRD | a=MD '&' b=GDr '&' c=AR | a=MD '&' b=GDr '&' c=RGRD | a=MD '&' b=RGRD '&' c=GDr | a=MD '&'
		//	b=RGRD '&' c=AR | a=RGRD '&' b=AR '&' c=MD | a=RGRD '&' b=AR '&' c=GDr | a=RGRD '&' b=MD '&' c=AR | a=RGRD '&' b=MD
		//	'&' c=GDr | a=RGRD '&' b=GDr '&' c=MD | a=RGRD '&' b=GDr '&' c=AR;
		@Override public ParserRule getRule() { return rule; }
		
		//a=AR '&' b=GDr '&' c=MD | a=AR '&' b=GDr '&' c=RGRD | a=AR '&' b=MD '&' c=GDr | a=AR '&' b=MD '&' c=RGRD | a=AR '&'
		//b=RGRD '&' c=MD | a=AR '&' b=RGRD '&' c=GDr | a=GDr '&' b=AR '&' c=MD | a=GDr '&' b=AR '&' c=RGRD | a=GDr '&' b=MD '&'
		//c=AR | a=GDr '&' b=MD '&' c=RGRD | a=GDr '&' b=RGRD '&' c=AR | a=GDr '&' b=RGRD '&' c=MD | a=MD '&' b=AR '&' c=GDr |
		//a=MD '&' b=AR '&' c=RGRD | a=MD '&' b=GDr '&' c=AR | a=MD '&' b=GDr '&' c=RGRD | a=MD '&' b=RGRD '&' c=GDr | a=MD '&'
		//b=RGRD '&' c=AR | a=RGRD '&' b=AR '&' c=MD | a=RGRD '&' b=AR '&' c=GDr | a=RGRD '&' b=MD '&' c=AR | a=RGRD '&' b=MD '&'
		//c=GDr | a=RGRD '&' b=GDr '&' c=MD | a=RGRD '&' b=GDr '&' c=AR
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//a=AR '&' b=GDr '&' c=MD
		public Group getGroup_0() { return cGroup_0; }
		
		//a=AR
		public Assignment getAAssignment_0_0() { return cAAssignment_0_0; }
		
		//AR
		public RuleCall getAARParserRuleCall_0_0_0() { return cAARParserRuleCall_0_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_0_1() { return cAmpersandKeyword_0_1; }
		
		//b=GDr
		public Assignment getBAssignment_0_2() { return cBAssignment_0_2; }
		
		//GDr
		public RuleCall getBGDrParserRuleCall_0_2_0() { return cBGDrParserRuleCall_0_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_0_3() { return cAmpersandKeyword_0_3; }
		
		//c=MD
		public Assignment getCAssignment_0_4() { return cCAssignment_0_4; }
		
		//MD
		public RuleCall getCMDParserRuleCall_0_4_0() { return cCMDParserRuleCall_0_4_0; }
		
		//a=AR '&' b=GDr '&' c=RGRD
		public Group getGroup_1() { return cGroup_1; }
		
		//a=AR
		public Assignment getAAssignment_1_0() { return cAAssignment_1_0; }
		
		//AR
		public RuleCall getAARParserRuleCall_1_0_0() { return cAARParserRuleCall_1_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_1_1() { return cAmpersandKeyword_1_1; }
		
		//b=GDr
		public Assignment getBAssignment_1_2() { return cBAssignment_1_2; }
		
		//GDr
		public RuleCall getBGDrParserRuleCall_1_2_0() { return cBGDrParserRuleCall_1_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_1_3() { return cAmpersandKeyword_1_3; }
		
		//c=RGRD
		public Assignment getCAssignment_1_4() { return cCAssignment_1_4; }
		
		//RGRD
		public RuleCall getCRGRDParserRuleCall_1_4_0() { return cCRGRDParserRuleCall_1_4_0; }
		
		//a=AR '&' b=MD '&' c=GDr
		public Group getGroup_2() { return cGroup_2; }
		
		//a=AR
		public Assignment getAAssignment_2_0() { return cAAssignment_2_0; }
		
		//AR
		public RuleCall getAARParserRuleCall_2_0_0() { return cAARParserRuleCall_2_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_2_1() { return cAmpersandKeyword_2_1; }
		
		//b=MD
		public Assignment getBAssignment_2_2() { return cBAssignment_2_2; }
		
		//MD
		public RuleCall getBMDParserRuleCall_2_2_0() { return cBMDParserRuleCall_2_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_2_3() { return cAmpersandKeyword_2_3; }
		
		//c=GDr
		public Assignment getCAssignment_2_4() { return cCAssignment_2_4; }
		
		//GDr
		public RuleCall getCGDrParserRuleCall_2_4_0() { return cCGDrParserRuleCall_2_4_0; }
		
		//a=AR '&' b=MD '&' c=RGRD
		public Group getGroup_3() { return cGroup_3; }
		
		//a=AR
		public Assignment getAAssignment_3_0() { return cAAssignment_3_0; }
		
		//AR
		public RuleCall getAARParserRuleCall_3_0_0() { return cAARParserRuleCall_3_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_3_1() { return cAmpersandKeyword_3_1; }
		
		//b=MD
		public Assignment getBAssignment_3_2() { return cBAssignment_3_2; }
		
		//MD
		public RuleCall getBMDParserRuleCall_3_2_0() { return cBMDParserRuleCall_3_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_3_3() { return cAmpersandKeyword_3_3; }
		
		//c=RGRD
		public Assignment getCAssignment_3_4() { return cCAssignment_3_4; }
		
		//RGRD
		public RuleCall getCRGRDParserRuleCall_3_4_0() { return cCRGRDParserRuleCall_3_4_0; }
		
		//a=AR '&' b=RGRD '&' c=MD
		public Group getGroup_4() { return cGroup_4; }
		
		//a=AR
		public Assignment getAAssignment_4_0() { return cAAssignment_4_0; }
		
		//AR
		public RuleCall getAARParserRuleCall_4_0_0() { return cAARParserRuleCall_4_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_4_1() { return cAmpersandKeyword_4_1; }
		
		//b=RGRD
		public Assignment getBAssignment_4_2() { return cBAssignment_4_2; }
		
		//RGRD
		public RuleCall getBRGRDParserRuleCall_4_2_0() { return cBRGRDParserRuleCall_4_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_4_3() { return cAmpersandKeyword_4_3; }
		
		//c=MD
		public Assignment getCAssignment_4_4() { return cCAssignment_4_4; }
		
		//MD
		public RuleCall getCMDParserRuleCall_4_4_0() { return cCMDParserRuleCall_4_4_0; }
		
		//a=AR '&' b=RGRD '&' c=GDr
		public Group getGroup_5() { return cGroup_5; }
		
		//a=AR
		public Assignment getAAssignment_5_0() { return cAAssignment_5_0; }
		
		//AR
		public RuleCall getAARParserRuleCall_5_0_0() { return cAARParserRuleCall_5_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_5_1() { return cAmpersandKeyword_5_1; }
		
		//b=RGRD
		public Assignment getBAssignment_5_2() { return cBAssignment_5_2; }
		
		//RGRD
		public RuleCall getBRGRDParserRuleCall_5_2_0() { return cBRGRDParserRuleCall_5_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_5_3() { return cAmpersandKeyword_5_3; }
		
		//c=GDr
		public Assignment getCAssignment_5_4() { return cCAssignment_5_4; }
		
		//GDr
		public RuleCall getCGDrParserRuleCall_5_4_0() { return cCGDrParserRuleCall_5_4_0; }
		
		//a=GDr '&' b=AR '&' c=MD
		public Group getGroup_6() { return cGroup_6; }
		
		//a=GDr
		public Assignment getAAssignment_6_0() { return cAAssignment_6_0; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_6_0_0() { return cAGDrParserRuleCall_6_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_6_1() { return cAmpersandKeyword_6_1; }
		
		//b=AR
		public Assignment getBAssignment_6_2() { return cBAssignment_6_2; }
		
		//AR
		public RuleCall getBARParserRuleCall_6_2_0() { return cBARParserRuleCall_6_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_6_3() { return cAmpersandKeyword_6_3; }
		
		//c=MD
		public Assignment getCAssignment_6_4() { return cCAssignment_6_4; }
		
		//MD
		public RuleCall getCMDParserRuleCall_6_4_0() { return cCMDParserRuleCall_6_4_0; }
		
		//a=GDr '&' b=AR '&' c=RGRD
		public Group getGroup_7() { return cGroup_7; }
		
		//a=GDr
		public Assignment getAAssignment_7_0() { return cAAssignment_7_0; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_7_0_0() { return cAGDrParserRuleCall_7_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_7_1() { return cAmpersandKeyword_7_1; }
		
		//b=AR
		public Assignment getBAssignment_7_2() { return cBAssignment_7_2; }
		
		//AR
		public RuleCall getBARParserRuleCall_7_2_0() { return cBARParserRuleCall_7_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_7_3() { return cAmpersandKeyword_7_3; }
		
		//c=RGRD
		public Assignment getCAssignment_7_4() { return cCAssignment_7_4; }
		
		//RGRD
		public RuleCall getCRGRDParserRuleCall_7_4_0() { return cCRGRDParserRuleCall_7_4_0; }
		
		//a=GDr '&' b=MD '&' c=AR
		public Group getGroup_8() { return cGroup_8; }
		
		//a=GDr
		public Assignment getAAssignment_8_0() { return cAAssignment_8_0; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_8_0_0() { return cAGDrParserRuleCall_8_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_8_1() { return cAmpersandKeyword_8_1; }
		
		//b=MD
		public Assignment getBAssignment_8_2() { return cBAssignment_8_2; }
		
		//MD
		public RuleCall getBMDParserRuleCall_8_2_0() { return cBMDParserRuleCall_8_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_8_3() { return cAmpersandKeyword_8_3; }
		
		//c=AR
		public Assignment getCAssignment_8_4() { return cCAssignment_8_4; }
		
		//AR
		public RuleCall getCARParserRuleCall_8_4_0() { return cCARParserRuleCall_8_4_0; }
		
		//a=GDr '&' b=MD '&' c=RGRD
		public Group getGroup_9() { return cGroup_9; }
		
		//a=GDr
		public Assignment getAAssignment_9_0() { return cAAssignment_9_0; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_9_0_0() { return cAGDrParserRuleCall_9_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_9_1() { return cAmpersandKeyword_9_1; }
		
		//b=MD
		public Assignment getBAssignment_9_2() { return cBAssignment_9_2; }
		
		//MD
		public RuleCall getBMDParserRuleCall_9_2_0() { return cBMDParserRuleCall_9_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_9_3() { return cAmpersandKeyword_9_3; }
		
		//c=RGRD
		public Assignment getCAssignment_9_4() { return cCAssignment_9_4; }
		
		//RGRD
		public RuleCall getCRGRDParserRuleCall_9_4_0() { return cCRGRDParserRuleCall_9_4_0; }
		
		//a=GDr '&' b=RGRD '&' c=AR
		public Group getGroup_10() { return cGroup_10; }
		
		//a=GDr
		public Assignment getAAssignment_10_0() { return cAAssignment_10_0; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_10_0_0() { return cAGDrParserRuleCall_10_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_10_1() { return cAmpersandKeyword_10_1; }
		
		//b=RGRD
		public Assignment getBAssignment_10_2() { return cBAssignment_10_2; }
		
		//RGRD
		public RuleCall getBRGRDParserRuleCall_10_2_0() { return cBRGRDParserRuleCall_10_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_10_3() { return cAmpersandKeyword_10_3; }
		
		//c=AR
		public Assignment getCAssignment_10_4() { return cCAssignment_10_4; }
		
		//AR
		public RuleCall getCARParserRuleCall_10_4_0() { return cCARParserRuleCall_10_4_0; }
		
		//a=GDr '&' b=RGRD '&' c=MD
		public Group getGroup_11() { return cGroup_11; }
		
		//a=GDr
		public Assignment getAAssignment_11_0() { return cAAssignment_11_0; }
		
		//GDr
		public RuleCall getAGDrParserRuleCall_11_0_0() { return cAGDrParserRuleCall_11_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_11_1() { return cAmpersandKeyword_11_1; }
		
		//b=RGRD
		public Assignment getBAssignment_11_2() { return cBAssignment_11_2; }
		
		//RGRD
		public RuleCall getBRGRDParserRuleCall_11_2_0() { return cBRGRDParserRuleCall_11_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_11_3() { return cAmpersandKeyword_11_3; }
		
		//c=MD
		public Assignment getCAssignment_11_4() { return cCAssignment_11_4; }
		
		//MD
		public RuleCall getCMDParserRuleCall_11_4_0() { return cCMDParserRuleCall_11_4_0; }
		
		//a=MD '&' b=AR '&' c=GDr
		public Group getGroup_12() { return cGroup_12; }
		
		//a=MD
		public Assignment getAAssignment_12_0() { return cAAssignment_12_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_12_0_0() { return cAMDParserRuleCall_12_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_12_1() { return cAmpersandKeyword_12_1; }
		
		//b=AR
		public Assignment getBAssignment_12_2() { return cBAssignment_12_2; }
		
		//AR
		public RuleCall getBARParserRuleCall_12_2_0() { return cBARParserRuleCall_12_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_12_3() { return cAmpersandKeyword_12_3; }
		
		//c=GDr
		public Assignment getCAssignment_12_4() { return cCAssignment_12_4; }
		
		//GDr
		public RuleCall getCGDrParserRuleCall_12_4_0() { return cCGDrParserRuleCall_12_4_0; }
		
		//a=MD '&' b=AR '&' c=RGRD
		public Group getGroup_13() { return cGroup_13; }
		
		//a=MD
		public Assignment getAAssignment_13_0() { return cAAssignment_13_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_13_0_0() { return cAMDParserRuleCall_13_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_13_1() { return cAmpersandKeyword_13_1; }
		
		//b=AR
		public Assignment getBAssignment_13_2() { return cBAssignment_13_2; }
		
		//AR
		public RuleCall getBARParserRuleCall_13_2_0() { return cBARParserRuleCall_13_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_13_3() { return cAmpersandKeyword_13_3; }
		
		//c=RGRD
		public Assignment getCAssignment_13_4() { return cCAssignment_13_4; }
		
		//RGRD
		public RuleCall getCRGRDParserRuleCall_13_4_0() { return cCRGRDParserRuleCall_13_4_0; }
		
		//a=MD '&' b=GDr '&' c=AR
		public Group getGroup_14() { return cGroup_14; }
		
		//a=MD
		public Assignment getAAssignment_14_0() { return cAAssignment_14_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_14_0_0() { return cAMDParserRuleCall_14_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_14_1() { return cAmpersandKeyword_14_1; }
		
		//b=GDr
		public Assignment getBAssignment_14_2() { return cBAssignment_14_2; }
		
		//GDr
		public RuleCall getBGDrParserRuleCall_14_2_0() { return cBGDrParserRuleCall_14_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_14_3() { return cAmpersandKeyword_14_3; }
		
		//c=AR
		public Assignment getCAssignment_14_4() { return cCAssignment_14_4; }
		
		//AR
		public RuleCall getCARParserRuleCall_14_4_0() { return cCARParserRuleCall_14_4_0; }
		
		//a=MD '&' b=GDr '&' c=RGRD
		public Group getGroup_15() { return cGroup_15; }
		
		//a=MD
		public Assignment getAAssignment_15_0() { return cAAssignment_15_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_15_0_0() { return cAMDParserRuleCall_15_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_15_1() { return cAmpersandKeyword_15_1; }
		
		//b=GDr
		public Assignment getBAssignment_15_2() { return cBAssignment_15_2; }
		
		//GDr
		public RuleCall getBGDrParserRuleCall_15_2_0() { return cBGDrParserRuleCall_15_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_15_3() { return cAmpersandKeyword_15_3; }
		
		//c=RGRD
		public Assignment getCAssignment_15_4() { return cCAssignment_15_4; }
		
		//RGRD
		public RuleCall getCRGRDParserRuleCall_15_4_0() { return cCRGRDParserRuleCall_15_4_0; }
		
		//a=MD '&' b=RGRD '&' c=GDr
		public Group getGroup_16() { return cGroup_16; }
		
		//a=MD
		public Assignment getAAssignment_16_0() { return cAAssignment_16_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_16_0_0() { return cAMDParserRuleCall_16_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_16_1() { return cAmpersandKeyword_16_1; }
		
		//b=RGRD
		public Assignment getBAssignment_16_2() { return cBAssignment_16_2; }
		
		//RGRD
		public RuleCall getBRGRDParserRuleCall_16_2_0() { return cBRGRDParserRuleCall_16_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_16_3() { return cAmpersandKeyword_16_3; }
		
		//c=GDr
		public Assignment getCAssignment_16_4() { return cCAssignment_16_4; }
		
		//GDr
		public RuleCall getCGDrParserRuleCall_16_4_0() { return cCGDrParserRuleCall_16_4_0; }
		
		//a=MD '&' b=RGRD '&' c=AR
		public Group getGroup_17() { return cGroup_17; }
		
		//a=MD
		public Assignment getAAssignment_17_0() { return cAAssignment_17_0; }
		
		//MD
		public RuleCall getAMDParserRuleCall_17_0_0() { return cAMDParserRuleCall_17_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_17_1() { return cAmpersandKeyword_17_1; }
		
		//b=RGRD
		public Assignment getBAssignment_17_2() { return cBAssignment_17_2; }
		
		//RGRD
		public RuleCall getBRGRDParserRuleCall_17_2_0() { return cBRGRDParserRuleCall_17_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_17_3() { return cAmpersandKeyword_17_3; }
		
		//c=AR
		public Assignment getCAssignment_17_4() { return cCAssignment_17_4; }
		
		//AR
		public RuleCall getCARParserRuleCall_17_4_0() { return cCARParserRuleCall_17_4_0; }
		
		//a=RGRD '&' b=AR '&' c=MD
		public Group getGroup_18() { return cGroup_18; }
		
		//a=RGRD
		public Assignment getAAssignment_18_0() { return cAAssignment_18_0; }
		
		//RGRD
		public RuleCall getARGRDParserRuleCall_18_0_0() { return cARGRDParserRuleCall_18_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_18_1() { return cAmpersandKeyword_18_1; }
		
		//b=AR
		public Assignment getBAssignment_18_2() { return cBAssignment_18_2; }
		
		//AR
		public RuleCall getBARParserRuleCall_18_2_0() { return cBARParserRuleCall_18_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_18_3() { return cAmpersandKeyword_18_3; }
		
		//c=MD
		public Assignment getCAssignment_18_4() { return cCAssignment_18_4; }
		
		//MD
		public RuleCall getCMDParserRuleCall_18_4_0() { return cCMDParserRuleCall_18_4_0; }
		
		//a=RGRD '&' b=AR '&' c=GDr
		public Group getGroup_19() { return cGroup_19; }
		
		//a=RGRD
		public Assignment getAAssignment_19_0() { return cAAssignment_19_0; }
		
		//RGRD
		public RuleCall getARGRDParserRuleCall_19_0_0() { return cARGRDParserRuleCall_19_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_19_1() { return cAmpersandKeyword_19_1; }
		
		//b=AR
		public Assignment getBAssignment_19_2() { return cBAssignment_19_2; }
		
		//AR
		public RuleCall getBARParserRuleCall_19_2_0() { return cBARParserRuleCall_19_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_19_3() { return cAmpersandKeyword_19_3; }
		
		//c=GDr
		public Assignment getCAssignment_19_4() { return cCAssignment_19_4; }
		
		//GDr
		public RuleCall getCGDrParserRuleCall_19_4_0() { return cCGDrParserRuleCall_19_4_0; }
		
		//a=RGRD '&' b=MD '&' c=AR
		public Group getGroup_20() { return cGroup_20; }
		
		//a=RGRD
		public Assignment getAAssignment_20_0() { return cAAssignment_20_0; }
		
		//RGRD
		public RuleCall getARGRDParserRuleCall_20_0_0() { return cARGRDParserRuleCall_20_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_20_1() { return cAmpersandKeyword_20_1; }
		
		//b=MD
		public Assignment getBAssignment_20_2() { return cBAssignment_20_2; }
		
		//MD
		public RuleCall getBMDParserRuleCall_20_2_0() { return cBMDParserRuleCall_20_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_20_3() { return cAmpersandKeyword_20_3; }
		
		//c=AR
		public Assignment getCAssignment_20_4() { return cCAssignment_20_4; }
		
		//AR
		public RuleCall getCARParserRuleCall_20_4_0() { return cCARParserRuleCall_20_4_0; }
		
		//a=RGRD '&' b=MD '&' c=GDr
		public Group getGroup_21() { return cGroup_21; }
		
		//a=RGRD
		public Assignment getAAssignment_21_0() { return cAAssignment_21_0; }
		
		//RGRD
		public RuleCall getARGRDParserRuleCall_21_0_0() { return cARGRDParserRuleCall_21_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_21_1() { return cAmpersandKeyword_21_1; }
		
		//b=MD
		public Assignment getBAssignment_21_2() { return cBAssignment_21_2; }
		
		//MD
		public RuleCall getBMDParserRuleCall_21_2_0() { return cBMDParserRuleCall_21_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_21_3() { return cAmpersandKeyword_21_3; }
		
		//c=GDr
		public Assignment getCAssignment_21_4() { return cCAssignment_21_4; }
		
		//GDr
		public RuleCall getCGDrParserRuleCall_21_4_0() { return cCGDrParserRuleCall_21_4_0; }
		
		//a=RGRD '&' b=GDr '&' c=MD
		public Group getGroup_22() { return cGroup_22; }
		
		//a=RGRD
		public Assignment getAAssignment_22_0() { return cAAssignment_22_0; }
		
		//RGRD
		public RuleCall getARGRDParserRuleCall_22_0_0() { return cARGRDParserRuleCall_22_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_22_1() { return cAmpersandKeyword_22_1; }
		
		//b=GDr
		public Assignment getBAssignment_22_2() { return cBAssignment_22_2; }
		
		//GDr
		public RuleCall getBGDrParserRuleCall_22_2_0() { return cBGDrParserRuleCall_22_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_22_3() { return cAmpersandKeyword_22_3; }
		
		//c=MD
		public Assignment getCAssignment_22_4() { return cCAssignment_22_4; }
		
		//MD
		public RuleCall getCMDParserRuleCall_22_4_0() { return cCMDParserRuleCall_22_4_0; }
		
		//a=RGRD '&' b=GDr '&' c=AR
		public Group getGroup_23() { return cGroup_23; }
		
		//a=RGRD
		public Assignment getAAssignment_23_0() { return cAAssignment_23_0; }
		
		//RGRD
		public RuleCall getARGRDParserRuleCall_23_0_0() { return cARGRDParserRuleCall_23_0_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_23_1() { return cAmpersandKeyword_23_1; }
		
		//b=GDr
		public Assignment getBAssignment_23_2() { return cBAssignment_23_2; }
		
		//GDr
		public RuleCall getBGDrParserRuleCall_23_2_0() { return cBGDrParserRuleCall_23_2_0; }
		
		//'&'
		public Keyword getAmpersandKeyword_23_3() { return cAmpersandKeyword_23_3; }
		
		//c=AR
		public Assignment getCAssignment_23_4() { return cCAssignment_23_4; }
		
		//AR
		public RuleCall getCARParserRuleCall_23_4_0() { return cCARParserRuleCall_23_4_0; }
	}
	
	
	private final ModelElements pModel;
	private final IncludesElements pIncludes;
	private final TerminalRule tINCLUDE;
	private final Pourcent_vitesse_hauteur_maxElements pPourcent_vitesse_hauteur_max;
	private final Pourcent_vitesse_deplacement_maxElements pPourcent_vitesse_deplacement_max;
	private final Pourcent_vitesse_rotation_maxElements pPourcent_vitesse_rotation_max;
	private final Hauteur_maxElements pHauteur_max;
	private final Eloignement_maxElements pEloignement_max;
	private final DecollerElements pDecoller;
	private final AtterrirElements pAtterrir;
	private final MonterElements pMonter;
	private final DescendreElements pDescendre;
	private final AvancerElements pAvancer;
	private final ReculerElements pReculer;
	private final GaucheElements pGauche;
	private final DroiteElements pDroite;
	private final PauseElements pPause;
	private final RotationGaucheElements pRotationGauche;
	private final RotationDroiteElements pRotationDroite;
	private final StartElements pStart;
	private final EndElements pEnd;
	private final StatementElements pStatement;
	private final FonctionDeclElements pFonctionDecl;
	private final IntConstanteElements pIntConstante;
	private final IntDeclElements pIntDecl;
	private final PourcentDeclElements pPourcentDecl;
	private final RefIntVarElements pRefIntVar;
	private final IntExpElements pIntExp;
	private final FonctionCallElements pFonctionCall;
	private final MDElements pMD;
	private final GDrElements pGDr;
	private final RGRDElements pRGRD;
	private final ARElements pAR;
	private final Parallele2Elements pParallele2;
	private final Parallele3Elements pParallele3;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyTurtleDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pIncludes = new IncludesElements();
		this.tINCLUDE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyTurtleDsl.INCLUDE");
		this.pPourcent_vitesse_hauteur_max = new Pourcent_vitesse_hauteur_maxElements();
		this.pPourcent_vitesse_deplacement_max = new Pourcent_vitesse_deplacement_maxElements();
		this.pPourcent_vitesse_rotation_max = new Pourcent_vitesse_rotation_maxElements();
		this.pHauteur_max = new Hauteur_maxElements();
		this.pEloignement_max = new Eloignement_maxElements();
		this.pDecoller = new DecollerElements();
		this.pAtterrir = new AtterrirElements();
		this.pMonter = new MonterElements();
		this.pDescendre = new DescendreElements();
		this.pAvancer = new AvancerElements();
		this.pReculer = new ReculerElements();
		this.pGauche = new GaucheElements();
		this.pDroite = new DroiteElements();
		this.pPause = new PauseElements();
		this.pRotationGauche = new RotationGaucheElements();
		this.pRotationDroite = new RotationDroiteElements();
		this.pStart = new StartElements();
		this.pEnd = new EndElements();
		this.pStatement = new StatementElements();
		this.pFonctionDecl = new FonctionDeclElements();
		this.pIntConstante = new IntConstanteElements();
		this.pIntDecl = new IntDeclElements();
		this.pPourcentDecl = new PourcentDeclElements();
		this.pRefIntVar = new RefIntVarElements();
		this.pIntExp = new IntExpElements();
		this.pFonctionCall = new FonctionCallElements();
		this.pMD = new MDElements();
		this.pGDr = new GDrElements();
		this.pRGRD = new RGRDElements();
		this.pAR = new ARElements();
		this.pParallele2 = new Parallele2Elements();
		this.pParallele3 = new Parallele3Elements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyTurtleDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	(includes+=Includes* '\n'*
	//	'func' 'main' '{'
	//	'prologue' '{'
	//	pvhm+=Pourcent_vitesse_hauteur_max '\n'*
	//	pvdm+=Pourcent_vitesse_deplacement_max '\n'*
	//	pvrm+=Pourcent_vitesse_rotation_max '\n'*
	//	hm+=Hauteur_max '\n'*
	//	em+=Eloignement_max '\n'*
	//	'}'
	//	Start '\n'* (SeconDec+=IntDecl | PourDec+=PourcentDecl | statements+=Statement | fonctions+=FonctionCall |
	//	parallele+=(Parallele2 | Parallele3))* '\n'*
	//	End '\n'*
	//	'}' '\n'*
	//	fonctions+=FonctionDecl* '\n'*)*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Includes:
	//	'import' '<' importURI=INCLUDE '>;';
	public IncludesElements getIncludesAccess() {
		return pIncludes;
	}
	
	public ParserRule getIncludesRule() {
		return getIncludesAccess().getRule();
	}
	
	//terminal INCLUDE:
	//	ID '.drone';
	public TerminalRule getINCLUDERule() {
		return tINCLUDE;
	}
	
	////Prologue
	//Pourcent_vitesse_hauteur_max:
	//	'def_pourcent_vitesse_hauteur_max' '('
	//	vitesse_verticale=IntExp
	//	')';
	public Pourcent_vitesse_hauteur_maxElements getPourcent_vitesse_hauteur_maxAccess() {
		return pPourcent_vitesse_hauteur_max;
	}
	
	public ParserRule getPourcent_vitesse_hauteur_maxRule() {
		return getPourcent_vitesse_hauteur_maxAccess().getRule();
	}
	
	//Pourcent_vitesse_deplacement_max:
	//	'def_pourcent_vitesse_deplacement_max' '('
	//	vitesse_deplacement=IntExp
	//	')';
	public Pourcent_vitesse_deplacement_maxElements getPourcent_vitesse_deplacement_maxAccess() {
		return pPourcent_vitesse_deplacement_max;
	}
	
	public ParserRule getPourcent_vitesse_deplacement_maxRule() {
		return getPourcent_vitesse_deplacement_maxAccess().getRule();
	}
	
	//Pourcent_vitesse_rotation_max:
	//	'def_pourcent_vitesse_rotation_max' '('
	//	vitesse_deplacement=IntExp
	//	')';
	public Pourcent_vitesse_rotation_maxElements getPourcent_vitesse_rotation_maxAccess() {
		return pPourcent_vitesse_rotation_max;
	}
	
	public ParserRule getPourcent_vitesse_rotation_maxRule() {
		return getPourcent_vitesse_rotation_maxAccess().getRule();
	}
	
	//Hauteur_max:
	//	'def_hauteur_max' '('
	//	hauteur_max=IntExp
	//	')';
	public Hauteur_maxElements getHauteur_maxAccess() {
		return pHauteur_max;
	}
	
	public ParserRule getHauteur_maxRule() {
		return getHauteur_maxAccess().getRule();
	}
	
	//Eloignement_max:
	//	'def_eloignement_max' '('
	//	hauteur_max=IntExp
	//	')';
	public Eloignement_maxElements getEloignement_maxAccess() {
		return pEloignement_max;
	}
	
	public ParserRule getEloignement_maxRule() {
		return getEloignement_maxAccess().getRule();
	}
	
	//Decoller:
	//	'decoller' '(' ')';
	public DecollerElements getDecollerAccess() {
		return pDecoller;
	}
	
	public ParserRule getDecollerRule() {
		return getDecollerAccess().getRule();
	}
	
	//Atterrir:
	//	'atterrir' '(' ')';
	public AtterrirElements getAtterrirAccess() {
		return pAtterrir;
	}
	
	public ParserRule getAtterrirRule() {
		return getAtterrirAccess().getRule();
	}
	
	//Monter:
	//	'monter' '('
	//	duree=IntExp ','
	//	vitesse_verticale=IntExp
	//	')';
	public MonterElements getMonterAccess() {
		return pMonter;
	}
	
	public ParserRule getMonterRule() {
		return getMonterAccess().getRule();
	}
	
	//Descendre:
	//	'descendre' '('
	//	duree=IntExp ','
	//	vitesse_verticale=IntExp
	//	')';
	public DescendreElements getDescendreAccess() {
		return pDescendre;
	}
	
	public ParserRule getDescendreRule() {
		return getDescendreAccess().getRule();
	}
	
	//Avancer:
	//	'avancer' '('
	//	duree=IntExp ','
	//	vitesse_deplacement=IntExp
	//	')';
	public AvancerElements getAvancerAccess() {
		return pAvancer;
	}
	
	public ParserRule getAvancerRule() {
		return getAvancerAccess().getRule();
	}
	
	//Reculer:
	//	'reculer' '('
	//	duree=IntExp ','
	//	vitesse_deplacement=IntExp
	//	')';
	public ReculerElements getReculerAccess() {
		return pReculer;
	}
	
	public ParserRule getReculerRule() {
		return getReculerAccess().getRule();
	}
	
	//Gauche:
	//	'gauche' '('
	//	duree=IntExp ','
	//	vitesse_deplacement=IntExp
	//	')';
	public GaucheElements getGaucheAccess() {
		return pGauche;
	}
	
	public ParserRule getGaucheRule() {
		return getGaucheAccess().getRule();
	}
	
	//Droite:
	//	'droite' '('
	//	duree=IntExp ','
	//	vitesse_deplacement=IntExp
	//	')';
	public DroiteElements getDroiteAccess() {
		return pDroite;
	}
	
	public ParserRule getDroiteRule() {
		return getDroiteAccess().getRule();
	}
	
	//Pause:
	//	'droite' '('
	//	duree=IntExp
	//	')';
	public PauseElements getPauseAccess() {
		return pPause;
	}
	
	public ParserRule getPauseRule() {
		return getPauseAccess().getRule();
	}
	
	//RotationGauche:
	//	'rotation_gauche' '('
	//	duree=IntExp ','
	//	vitesse_rotation=IntExp
	//	')';
	public RotationGaucheElements getRotationGaucheAccess() {
		return pRotationGauche;
	}
	
	public ParserRule getRotationGaucheRule() {
		return getRotationGaucheAccess().getRule();
	}
	
	//RotationDroite:
	//	'rotation_droite' '('
	//	duree=IntExp ','
	//	vitesse_rotation=IntExp
	//	')';
	public RotationDroiteElements getRotationDroiteAccess() {
		return pRotationDroite;
	}
	
	public ParserRule getRotationDroiteRule() {
		return getRotationDroiteAccess().getRule();
	}
	
	//Start:
	//	Decoller;
	public StartElements getStartAccess() {
		return pStart;
	}
	
	public ParserRule getStartRule() {
		return getStartAccess().getRule();
	}
	
	//End:
	//	Atterrir;
	public EndElements getEndAccess() {
		return pEnd;
	}
	
	public ParserRule getEndRule() {
		return getEndAccess().getRule();
	}
	
	//Statement:
	//	Avancer | Descendre | RotationDroite | RotationGauche | Pause | Droite | Gauche | Reculer | Monter;
	public StatementElements getStatementAccess() {
		return pStatement;
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}
	
	//FonctionDecl:
	//	'func' name=ID '(' ')' '{' body+=Statement* '\n' '}';
	public FonctionDeclElements getFonctionDeclAccess() {
		return pFonctionDecl;
	}
	
	public ParserRule getFonctionDeclRule() {
		return getFonctionDeclAccess().getRule();
	}
	
	//IntConstante:
	//	val=INT;
	public IntConstanteElements getIntConstanteAccess() {
		return pIntConstante;
	}
	
	public ParserRule getIntConstanteRule() {
		return getIntConstanteAccess().getRule();
	}
	
	//IntDecl:
	//	'Seconde' name=ID '=' val=IntExp;
	public IntDeclElements getIntDeclAccess() {
		return pIntDecl;
	}
	
	public ParserRule getIntDeclRule() {
		return getIntDeclAccess().getRule();
	}
	
	//PourcentDecl:
	//	'Pourcent' name=ID '=' val=IntExp;
	public PourcentDeclElements getPourcentDeclAccess() {
		return pPourcentDecl;
	}
	
	public ParserRule getPourcentDeclRule() {
		return getPourcentDeclAccess().getRule();
	}
	
	//RefIntVar:
	//	var=[IntDecl];
	public RefIntVarElements getRefIntVarAccess() {
		return pRefIntVar;
	}
	
	public ParserRule getRefIntVarRule() {
		return getRefIntVarAccess().getRule();
	}
	
	//IntExp:
	//	IntConstante | RefIntVar;
	public IntExpElements getIntExpAccess() {
		return pIntExp;
	}
	
	public ParserRule getIntExpRule() {
		return getIntExpAccess().getRule();
	}
	
	//FonctionCall:
	//	func=[FonctionDecl] '(' ')';
	public FonctionCallElements getFonctionCallAccess() {
		return pFonctionCall;
	}
	
	public ParserRule getFonctionCallRule() {
		return getFonctionCallAccess().getRule();
	}
	
	//MD:
	//	Monter | Descendre;
	public MDElements getMDAccess() {
		return pMD;
	}
	
	public ParserRule getMDRule() {
		return getMDAccess().getRule();
	}
	
	//GDr:
	//	Gauche | Droite;
	public GDrElements getGDrAccess() {
		return pGDr;
	}
	
	public ParserRule getGDrRule() {
		return getGDrAccess().getRule();
	}
	
	//RGRD:
	//	RotationGauche | RotationDroite;
	public RGRDElements getRGRDAccess() {
		return pRGRD;
	}
	
	public ParserRule getRGRDRule() {
		return getRGRDAccess().getRule();
	}
	
	//AR:
	//	Avancer | Reculer;
	public ARElements getARAccess() {
		return pAR;
	}
	
	public ParserRule getARRule() {
		return getARAccess().getRule();
	}
	
	//Parallele2:
	//	a=MD '&' t=GDr | a=MD '&' t=AR | a=MD '&' t=RGRD | t=GDr '&' b=AR | t=GDr '&' b=MD | t=GDr '&' b=RGRD | t=RGRD '&'
	//	a=MD | t=RGRD '&' a=AR | t=RGRD '&' a=GDr | t=AR '&' a=MD | t=AR '&' a=RGRD | t=AR '&' a=GDr;
	public Parallele2Elements getParallele2Access() {
		return pParallele2;
	}
	
	public ParserRule getParallele2Rule() {
		return getParallele2Access().getRule();
	}
	
	//Parallele3:
	//	a=AR '&' b=GDr '&' c=MD | a=AR '&' b=GDr '&' c=RGRD | a=AR '&' b=MD '&' c=GDr | a=AR '&' b=MD '&' c=RGRD | a=AR '&'
	//	b=RGRD '&' c=MD | a=AR '&' b=RGRD '&' c=GDr | a=GDr '&' b=AR '&' c=MD | a=GDr '&' b=AR '&' c=RGRD | a=GDr '&' b=MD '&'
	//	c=AR | a=GDr '&' b=MD '&' c=RGRD | a=GDr '&' b=RGRD '&' c=AR | a=GDr '&' b=RGRD '&' c=MD | a=MD '&' b=AR '&' c=GDr |
	//	a=MD '&' b=AR '&' c=RGRD | a=MD '&' b=GDr '&' c=AR | a=MD '&' b=GDr '&' c=RGRD | a=MD '&' b=RGRD '&' c=GDr | a=MD '&'
	//	b=RGRD '&' c=AR | a=RGRD '&' b=AR '&' c=MD | a=RGRD '&' b=AR '&' c=GDr | a=RGRD '&' b=MD '&' c=AR | a=RGRD '&' b=MD
	//	'&' c=GDr | a=RGRD '&' b=GDr '&' c=MD | a=RGRD '&' b=GDr '&' c=AR;
	public Parallele3Elements getParallele3Access() {
		return pParallele3;
	}
	
	public ParserRule getParallele3Rule() {
		return getParallele3Access().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
