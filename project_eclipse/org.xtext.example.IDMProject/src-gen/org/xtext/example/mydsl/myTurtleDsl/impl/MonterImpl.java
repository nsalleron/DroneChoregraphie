/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.myTurtleDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myTurtleDsl.IntExp;
import org.xtext.example.mydsl.myTurtleDsl.Monter;
import org.xtext.example.mydsl.myTurtleDsl.MyTurtleDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Monter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myTurtleDsl.impl.MonterImpl#getDuree <em>Duree</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myTurtleDsl.impl.MonterImpl#getVitesse_verticale <em>Vitesse verticale</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MonterImpl extends MDImpl implements Monter
{
  /**
   * The cached value of the '{@link #getDuree() <em>Duree</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuree()
   * @generated
   * @ordered
   */
  protected IntExp duree;

  /**
   * The cached value of the '{@link #getVitesse_verticale() <em>Vitesse verticale</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVitesse_verticale()
   * @generated
   * @ordered
   */
  protected IntExp vitesse_verticale;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MonterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyTurtleDslPackage.Literals.MONTER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntExp getDuree()
  {
    return duree;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDuree(IntExp newDuree, NotificationChain msgs)
  {
    IntExp oldDuree = duree;
    duree = newDuree;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyTurtleDslPackage.MONTER__DUREE, oldDuree, newDuree);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDuree(IntExp newDuree)
  {
    if (newDuree != duree)
    {
      NotificationChain msgs = null;
      if (duree != null)
        msgs = ((InternalEObject)duree).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyTurtleDslPackage.MONTER__DUREE, null, msgs);
      if (newDuree != null)
        msgs = ((InternalEObject)newDuree).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyTurtleDslPackage.MONTER__DUREE, null, msgs);
      msgs = basicSetDuree(newDuree, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyTurtleDslPackage.MONTER__DUREE, newDuree, newDuree));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntExp getVitesse_verticale()
  {
    return vitesse_verticale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVitesse_verticale(IntExp newVitesse_verticale, NotificationChain msgs)
  {
    IntExp oldVitesse_verticale = vitesse_verticale;
    vitesse_verticale = newVitesse_verticale;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyTurtleDslPackage.MONTER__VITESSE_VERTICALE, oldVitesse_verticale, newVitesse_verticale);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVitesse_verticale(IntExp newVitesse_verticale)
  {
    if (newVitesse_verticale != vitesse_verticale)
    {
      NotificationChain msgs = null;
      if (vitesse_verticale != null)
        msgs = ((InternalEObject)vitesse_verticale).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyTurtleDslPackage.MONTER__VITESSE_VERTICALE, null, msgs);
      if (newVitesse_verticale != null)
        msgs = ((InternalEObject)newVitesse_verticale).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyTurtleDslPackage.MONTER__VITESSE_VERTICALE, null, msgs);
      msgs = basicSetVitesse_verticale(newVitesse_verticale, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyTurtleDslPackage.MONTER__VITESSE_VERTICALE, newVitesse_verticale, newVitesse_verticale));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyTurtleDslPackage.MONTER__DUREE:
        return basicSetDuree(null, msgs);
      case MyTurtleDslPackage.MONTER__VITESSE_VERTICALE:
        return basicSetVitesse_verticale(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyTurtleDslPackage.MONTER__DUREE:
        return getDuree();
      case MyTurtleDslPackage.MONTER__VITESSE_VERTICALE:
        return getVitesse_verticale();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyTurtleDslPackage.MONTER__DUREE:
        setDuree((IntExp)newValue);
        return;
      case MyTurtleDslPackage.MONTER__VITESSE_VERTICALE:
        setVitesse_verticale((IntExp)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyTurtleDslPackage.MONTER__DUREE:
        setDuree((IntExp)null);
        return;
      case MyTurtleDslPackage.MONTER__VITESSE_VERTICALE:
        setVitesse_verticale((IntExp)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyTurtleDslPackage.MONTER__DUREE:
        return duree != null;
      case MyTurtleDslPackage.MONTER__VITESSE_VERTICALE:
        return vitesse_verticale != null;
    }
    return super.eIsSet(featureID);
  }

} //MonterImpl
