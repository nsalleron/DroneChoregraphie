# Path: out/arsdk-native/build/libpomp/libpomp.dylib
# Arch: x86_64
# Object files:
[  0] linker synthesized
[  1] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_addr.c.o
[  2] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_buffer.c.o
[  3] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_conn.c.o
[  4] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_ctx.c.o
[  5] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_decoder.c.o
[  6] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_encoder.c.o
[  7] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_log.c.o
[  8] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_loop.c.o
[  9] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_msg.c.o
[ 10] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_prot.c.o
[ 11] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/build/libpomp/obj/src/pomp_timer.c.o
[ 12] /Users/nicolassalleron/Desktop/IDMProject/parrot_controller/SDK_PARROT/out/arsdk-native/staging/usr/lib/libulog.dylib
[ 13] /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libSystem.tbd
# Sections:
# Address	Size    	Segment	Section
0x00001410	0x0000AE4A	__TEXT	__text
0x0000C25A	0x0000014A	__TEXT	__stubs
0x0000C3A4	0x00000236	__TEXT	__stub_helper
0x0000C5DA	0x000007DF	__TEXT	__cstring
0x0000CDC0	0x00000010	__TEXT	__const
0x0000CDD0	0x00000224	__TEXT	__unwind_info
0x0000D000	0x00000010	__DATA	__nl_symbol_ptr
0x0000D010	0x00000008	__DATA	__got
0x0000D018	0x000001B8	__DATA	__la_symbol_ptr
0x0000D1D0	0x000000A0	__DATA	__const
0x0000D270	0x00000030	__DATA	__data
# Symbols:
# Address	Size    	File  Name
0x00001410	0x00000160	[  1] _pomp_addr_parse
0x00001570	0x00000140	[  1] _pomp_addr_parse_inet
0x000016B0	0x000001C0	[  1] _pomp_addr_format
0x00001870	0x0000001B	[  1] _pomp_addr_is_unix
0x00001890	0x00000030	[  2] _pomp_buffer_get_fd
0x000018C0	0x000000A0	[  2] _pomp_buffer_register_fd
0x00001960	0x000001A0	[  2] _pomp_buffer_clear
0x00001B00	0x00000060	[  2] _pomp_buffer_new
0x00001B60	0x00000050	[  2] _pomp_buffer_set_capacity
0x00001BB0	0x000001B0	[  2] _pomp_buffer_new_copy
0x00001D60	0x00000080	[  2] _pomp_buffer_new_with_data
0x00001DE0	0x00000070	[  2] _pomp_buffer_new_get_data
0x00001E50	0x00000010	[  2] _pomp_buffer_ref
0x00001E60	0x00000040	[  2] _pomp_buffer_unref
0x00001EA0	0x00000020	[  2] _pomp_buffer_is_shared
0x00001EC0	0x00000030	[  2] _pomp_buffer_set_len
0x00001EF0	0x00000040	[  2] _pomp_buffer_get_data
0x00001F30	0x00000040	[  2] _pomp_buffer_get_cdata
0x00001F70	0x000000C0	[  2] _pomp_buffer_append_data
0x00002030	0x000000D0	[  2] _pomp_buffer_write
0x00002100	0x00000070	[  2] _pomp_buffer_ensure_capacity
0x00002170	0x00000020	[  2] _pomp_buffer_writeb
0x00002190	0x00000180	[  2] _pomp_buffer_write_fd
0x00002310	0x00000050	[  2] _pomp_buffer_read
0x00002360	0x00000040	[  2] _pomp_buffer_cread
0x000023A0	0x00000040	[  2] _pomp_buffer_readb
0x000023E0	0x000000AB	[  2] _pomp_buffer_read_fd
0x00002490	0x00000230	[  3] _pomp_conn_new
0x000026C0	0x000008D0	[  3] _pomp_conn_cb
0x00002F90	0x00000050	[  3] _pomp_conn_destroy
0x00002FE0	0x00000150	[  3] _pomp_conn_close
0x00003130	0x00000110	[  3] _pomp_conn_clear_rx_fds
0x00003240	0x00000160	[  3] _clear_pending_callbacks
0x000033A0	0x00000020	[  3] _pomp_conn_get_next
0x000033C0	0x00000020	[  3] _pomp_conn_set_next
0x000033E0	0x000000E0	[  3] _pomp_conn_disconnect
0x000034C0	0x00000030	[  3] _pomp_conn_get_local_addr
0x000034F0	0x00000030	[  3] _pomp_conn_get_peer_addr
0x00003520	0x00000030	[  3] _pomp_conn_get_peer_cred
0x00003550	0x00000020	[  3] _pomp_conn_get_fd
0x00003570	0x00000040	[  3] _pomp_conn_suspend_read
0x000035B0	0x00000040	[  3] _pomp_conn_resume_read
0x000035F0	0x00000020	[  3] _pomp_conn_send_msg_to
0x00003610	0x00000310	[  3] _pomp_conn_send_buf_internal
0x00003920	0x00000020	[  3] _pomp_conn_send_msg
0x00003940	0x000000E0	[  3] _pomp_conn_send
0x00003A20	0x00000050	[  3] _pomp_conn_sendv
0x00003A70	0x00000010	[  3] _pomp_conn_send_raw_buf_to
0x00003A80	0x00000010	[  3] _pomp_conn_send_raw_buf
0x00003A90	0x00000160	[  3] _pomp_conn_fixup_rx_fds_cb
0x00003BF0	0x000003C0	[  3] _pomp_io_buffer_write
0x00003FB0	0x000000D0	[  3] _pomp_conn_add_idle_cb
0x00004080	0x00000101	[  3] _pomp_idle_cb
0x00004190	0x00000030	[  4] _pomp_event_str
0x000041C0	0x00000030	[  4] _pomp_socket_kind_str
0x000041F0	0x00000050	[  4] _pomp_ctx_new
0x00004240	0x000000A0	[  4] _pomp_ctx_new_with_loop
0x000042E0	0x00000060	[  4] _timer_cb
0x00004340	0x00000060	[  4] _pomp_ctx_destroy
0x000043A0	0x00000030	[  4] _pomp_ctx_set_raw
0x000043D0	0x00000030	[  4] _pomp_ctx_set_socket_cb
0x00004400	0x00000030	[  4] _pomp_ctx_set_send_cb
0x00004430	0x00000020	[  4] _pomp_ctx_setup_keepalive
0x00004450	0x00000020	[  4] _pomp_ctx_listen
0x00004470	0x00000280	[  4] _pomp_ctx_start
0x000046F0	0x00000090	[  4] _pomp_ctx_connect
0x00004780	0x00000140	[  4] _pomp_ctx_bind
0x000048C0	0x00000290	[  4] _pomp_ctx_stop
0x00004B50	0x00000020	[  4] _pomp_ctx_get_fd
0x00004B70	0x00000020	[  4] _pomp_ctx_process_fd
0x00004B90	0x00000020	[  4] _pomp_ctx_wait_and_process
0x00004BB0	0x00000020	[  4] _pomp_ctx_wakeup
0x00004BD0	0x00000020	[  4] _pomp_ctx_get_loop
0x00004BF0	0x00000030	[  4] _pomp_ctx_get_next_conn
0x00004C20	0x00000020	[  4] _pomp_ctx_get_conn
0x00004C40	0x00000040	[  4] _pomp_ctx_get_local_addr
0x00004C80	0x000000A0	[  4] _pomp_ctx_send_msg
0x00004D20	0x00000030	[  4] _pomp_ctx_send_msg_to
0x00004D50	0x000000A0	[  4] _pomp_ctx_send
0x00004DF0	0x000000C0	[  4] _pomp_ctx_sendv
0x00004EB0	0x000000A0	[  4] _pomp_ctx_send_raw_buf
0x00004F50	0x00000040	[  4] _pomp_ctx_send_raw_buf_to
0x00004F90	0x00000150	[  4] _pomp_ctx_remove_conn
0x000050E0	0x00000050	[  4] _pomp_ctx_notify_msg
0x00005130	0x00000030	[  4] _pomp_ctx_notify_raw_buf
0x00005160	0x00000040	[  4] _pomp_ctx_notify_send
0x000051A0	0x00000020	[  4] _pomp_ctx_sendcb_is_set
0x000051C0	0x000004A0	[  4] _server_start
0x00005660	0x00000270	[  4] _client_start
0x000058D0	0x000004C0	[  4] _dgram_start
0x00005D90	0x00000240	[  4] _fd_setup_flags
0x00005FD0	0x000001A0	[  4] _server_cb
0x00006170	0x000000B0	[  4] _fd_socket_setup_keepalive
0x00006220	0x00000010	[  4] _client_cb
0x00006230	0x000002CC	[  4] _client_complete_conn
0x00006500	0x00000020	[  5] _pomp_decoder_new
0x00006520	0x00000020	[  5] _pomp_decoder_destroy
0x00006540	0x00000030	[  5] _pomp_decoder_init
0x00006570	0x00000030	[  5] _pomp_decoder_clear
0x000065A0	0x000000B0	[  5] _pomp_decoder_read
0x00006650	0x00000940	[  5] _pomp_decoder_readv
0x00006F90	0x00000060	[  5] _pomp_decoder_read_i64
0x00006FF0	0x00000050	[  5] _pomp_decoder_read_i8
0x00007040	0x00000050	[  5] _pomp_decoder_read_i16
0x00007090	0x00000050	[  5] _pomp_decoder_read_i32
0x000070E0	0x00000050	[  5] _pomp_decoder_read_u64
0x00007130	0x00000050	[  5] _pomp_decoder_read_u8
0x00007180	0x00000050	[  5] _pomp_decoder_read_u16
0x000071D0	0x00000050	[  5] _pomp_decoder_read_u32
0x00007220	0x00000060	[  5] _pomp_decoder_read_str
0x00007280	0x00000150	[  5] _pomp_decoder_read_cbuf
0x000073D0	0x00000050	[  5] _pomp_decoder_read_f64
0x00007420	0x00000040	[  5] _pomp_decoder_read_f32
0x00007460	0x000000D0	[  5] _pomp_decoder_read_fd
0x00007530	0x00000060	[  5] _pomp_decoder_dump
0x00007590	0x000000C0	[  5] _decoder_dump
0x00007650	0x00000080	[  5] _pomp_decoder_adump
0x000076D0	0x000003E0	[  5] _pomp_decoder_walk
0x00007AB0	0x000001E0	[  5] _pomp_decoder_read_cstr
0x00007C90	0x000000C0	[  5] _decoder_read_data
0x00007D50	0x000000F0	[  5] _decoder_read_varint
0x00007E40	0x00000080	[  5] _pomp_decoder_read_buf
0x00007EC0	0x00000190	[  5] _dump_append
0x00008050	0x000001F4	[  5] _decoder_dump_cb
0x00008250	0x00000020	[  6] _pomp_encoder_new
0x00008270	0x00000020	[  6] _pomp_encoder_destroy
0x00008290	0x00000030	[  6] _pomp_encoder_init
0x000082C0	0x00000030	[  6] _pomp_encoder_clear
0x000082F0	0x000000B0	[  6] _pomp_encoder_write
0x000083A0	0x00001380	[  6] _encoder_writev_internal
0x00009720	0x00000020	[  6] _pomp_encoder_writev
0x00009740	0x00000020	[  6] _pomp_encoder_write_argv
0x00009760	0x000000A0	[  6] _encoder_write_internal
0x00009800	0x00000070	[  6] _pomp_encoder_write_i8
0x00009870	0x00000070	[  6] _pomp_encoder_write_u8
0x000098E0	0x00000070	[  6] _pomp_encoder_write_i16
0x00009950	0x00000070	[  6] _pomp_encoder_write_u16
0x000099C0	0x000000D0	[  6] _pomp_encoder_write_i32
0x00009A90	0x000000D0	[  6] _pomp_encoder_write_u32
0x00009B60	0x000000D0	[  6] _pomp_encoder_write_i64
0x00009C30	0x000000C0	[  6] _pomp_encoder_write_u64
0x00009CF0	0x00000150	[  6] _pomp_encoder_write_str
0x00009E40	0x00000100	[  6] _pomp_encoder_write_buf
0x00009F40	0x00000080	[  6] _pomp_encoder_write_f32
0x00009FC0	0x00000080	[  6] _pomp_encoder_write_f64
0x0000A040	0x0000006D	[  6] _pomp_encoder_write_fd
0x0000A0B0	0x000000A0	[  8] _pomp_loop_poll_do_new
0x0000A150	0x00000060	[  8] _pomp_loop_poll_do_destroy
0x0000A1B0	0x00000010	[  8] _pomp_loop_poll_do_add
0x0000A1C0	0x00000010	[  8] _pomp_loop_poll_do_update
0x0000A1D0	0x00000010	[  8] _pomp_loop_poll_do_remove
0x0000A1E0	0x00000010	[  8] _pomp_loop_poll_do_get_fd
0x0000A1F0	0x000002F0	[  8] _pomp_loop_poll_do_wait_and_process
0x0000A4E0	0x000000C0	[  8] _pomp_loop_poll_do_wakeup
0x0000A5A0	0x00000050	[  8] _pomp_loop_new
0x0000A5F0	0x00000100	[  8] _pomp_loop_destroy
0x0000A6F0	0x000001E0	[  8] _pomp_loop_add
0x0000A8D0	0x000000C0	[  8] _pomp_loop_update
0x0000A990	0x000000E0	[  8] _pomp_loop_update2
0x0000AA70	0x00000140	[  8] _pomp_loop_remove
0x0000ABB0	0x00000030	[  8] _pomp_loop_has_fd
0x0000ABE0	0x00000020	[  8] _pomp_loop_get_fd
0x0000AC00	0x00000090	[  8] _pomp_loop_process_fd
0x0000AC90	0x00000090	[  8] _pomp_loop_wait_and_process
0x0000AD20	0x00000020	[  8] _pomp_loop_wakeup
0x0000AD40	0x000000A0	[  8] _pomp_loop_idle_add
0x0000ADE0	0x000000AF	[  8] _pomp_loop_idle_remove
0x0000AE90	0x00000020	[  9] _pomp_msg_new
0x0000AEB0	0x00000060	[  9] _pomp_msg_new_copy
0x0000AF10	0x000001C0	[  9] _pomp_msg_new_with_buffer
0x0000B0D0	0x00000040	[  9] _pomp_msg_destroy
0x0000B110	0x00000040	[  9] _pomp_msg_clear
0x0000B150	0x00000050	[  9] _pomp_msg_init
0x0000B1A0	0x00000100	[  9] _pomp_msg_finish
0x0000B2A0	0x00000010	[  9] _pomp_msg_get_id
0x0000B2B0	0x00000020	[  9] _pomp_msg_get_buffer
0x0000B2D0	0x000000A0	[  9] _pomp_msg_write
0x0000B370	0x000000B0	[  9] _pomp_msg_writev
0x0000B420	0x000000B0	[  9] _pomp_msg_write_argv
0x0000B4D0	0x000000F0	[  9] _pomp_msg_read
0x0000B5C0	0x00000060	[  9] _pomp_msg_readv
0x0000B620	0x00000060	[  9] _pomp_msg_dump
0x0000B680	0x00000062	[  9] _pomp_msg_adump
0x0000B6F0	0x00000050	[ 10] _pomp_prot_new
0x0000B740	0x00000060	[ 10] _pomp_prot_destroy
0x0000B7A0	0x000005D0	[ 10] _pomp_prot_decode_msg
0x0000BD70	0x00000034	[ 10] _pomp_prot_release_msg
0x0000BDB0	0x00000120	[ 11] _pomp_timer_kqueue_new
0x0000BED0	0x00000040	[ 11] _pomp_timer_kqueue_destroy
0x0000BF10	0x000000F0	[ 11] _pomp_timer_kqueue_set
0x0000C000	0x00000060	[ 11] _pomp_timer_kqueue_clear
0x0000C060	0x00000020	[ 11] _pomp_timer_new
0x0000C080	0x00000010	[ 11] _pomp_timer_destroy
0x0000C090	0x00000020	[ 11] _pomp_timer_set
0x0000C0B0	0x00000020	[ 11] _pomp_timer_set_periodic
0x0000C0D0	0x00000010	[ 11] _pomp_timer_clear
0x0000C0E0	0x0000017A	[ 11] _pomp_timer_kqueue_cb
0x0000C25A	0x00000006	[ 13] ___bzero
0x0000C260	0x00000006	[ 13] ___error
0x0000C266	0x00000006	[ 13] ___memcpy_chk
0x0000C26C	0x00000006	[ 13] ___snprintf_chk
0x0000C272	0x00000006	[ 13] ___stack_chk_fail
0x0000C278	0x00000006	[ 13] ___vsnprintf_chk
0x0000C27E	0x00000006	[ 13] _accept
0x0000C284	0x00000006	[ 13] _bind
0x0000C28A	0x00000006	[ 13] _calloc
0x0000C290	0x00000006	[ 13] _close
0x0000C296	0x00000006	[ 13] _connect
0x0000C29C	0x00000006	[ 13] _dup
0x0000C2A2	0x00000006	[ 13] _fcntl
0x0000C2A8	0x00000006	[ 13] _free
0x0000C2AE	0x00000006	[ 13] _freeaddrinfo
0x0000C2B4	0x00000006	[ 13] _gai_strerror
0x0000C2BA	0x00000006	[ 13] _getaddrinfo
0x0000C2C0	0x00000006	[ 13] _getnameinfo
0x0000C2C6	0x00000006	[ 13] _getpeername
0x0000C2CC	0x00000006	[ 13] _getsockname
0x0000C2D2	0x00000006	[ 13] _getsockopt
0x0000C2D8	0x00000006	[ 13] _kevent
0x0000C2DE	0x00000006	[ 13] _kqueue
0x0000C2E4	0x00000006	[ 13] _listen
0x0000C2EA	0x00000006	[ 13] _malloc
0x0000C2F0	0x00000006	[ 13] _memcpy
0x0000C2F6	0x00000006	[ 13] _memmove
0x0000C2FC	0x00000006	[ 13] _pipe
0x0000C302	0x00000006	[ 13] _poll
0x0000C308	0x00000006	[ 13] _read
0x0000C30E	0x00000006	[ 13] _realloc
0x0000C314	0x00000006	[ 13] _recvfrom
0x0000C31A	0x00000006	[ 13] _recvmsg
0x0000C320	0x00000006	[ 13] _sendmsg
0x0000C326	0x00000006	[ 13] _sendto
0x0000C32C	0x00000006	[ 13] _setsockopt
0x0000C332	0x00000006	[ 13] _shutdown
0x0000C338	0x00000006	[ 13] _socket
0x0000C33E	0x00000006	[ 13] _sscanf
0x0000C344	0x00000006	[ 13] _strdup
0x0000C34A	0x00000006	[ 13] _strerror
0x0000C350	0x00000006	[ 13] _strlen
0x0000C356	0x00000006	[ 13] _strncmp
0x0000C35C	0x00000006	[ 13] _strncpy
0x0000C362	0x00000006	[ 13] _strrchr
0x0000C368	0x00000006	[ 13] _strtod
0x0000C36E	0x00000006	[ 13] _strtof
0x0000C374	0x00000006	[ 13] _strtol
0x0000C37A	0x00000006	[ 13] _strtoll
0x0000C380	0x00000006	[ 13] _strtoul
0x0000C386	0x00000006	[ 13] _strtoull
0x0000C38C	0x00000006	[ 12] _ulog_init_cookie
0x0000C392	0x00000006	[ 12] _ulog_log_write
0x0000C398	0x00000006	[ 13] _unlink
0x0000C39E	0x00000006	[ 13] _write
0x0000C3A4	0x00000010	[  0] helper helper
0x0000C3B4	0x0000000A	[ 12] _ulog_init_cookie
0x0000C3BE	0x0000000A	[ 12] _ulog_log_write
0x0000C3C8	0x0000000A	[ 13] ___bzero
0x0000C3D2	0x0000000A	[ 13] ___error
0x0000C3DC	0x0000000A	[ 13] ___memcpy_chk
0x0000C3E6	0x0000000A	[ 13] ___snprintf_chk
0x0000C3F0	0x0000000A	[ 13] ___stack_chk_fail
0x0000C3FA	0x0000000A	[ 13] ___vsnprintf_chk
0x0000C404	0x0000000A	[ 13] _accept
0x0000C40E	0x0000000A	[ 13] _bind
0x0000C418	0x0000000A	[ 13] _calloc
0x0000C422	0x0000000A	[ 13] _close
0x0000C42C	0x0000000A	[ 13] _connect
0x0000C436	0x0000000A	[ 13] _dup
0x0000C440	0x0000000A	[ 13] _fcntl
0x0000C44A	0x0000000A	[ 13] _free
0x0000C454	0x0000000A	[ 13] _freeaddrinfo
0x0000C45E	0x0000000A	[ 13] _gai_strerror
0x0000C468	0x0000000A	[ 13] _getaddrinfo
0x0000C472	0x0000000A	[ 13] _getnameinfo
0x0000C47C	0x0000000A	[ 13] _getpeername
0x0000C486	0x0000000A	[ 13] _getsockname
0x0000C490	0x0000000A	[ 13] _getsockopt
0x0000C49A	0x0000000A	[ 13] _kevent
0x0000C4A4	0x0000000A	[ 13] _kqueue
0x0000C4AE	0x0000000A	[ 13] _listen
0x0000C4B8	0x0000000A	[ 13] _malloc
0x0000C4C2	0x0000000A	[ 13] _memcpy
0x0000C4CC	0x0000000A	[ 13] _memmove
0x0000C4D6	0x0000000A	[ 13] _pipe
0x0000C4E0	0x0000000A	[ 13] _poll
0x0000C4EA	0x0000000A	[ 13] _read
0x0000C4F4	0x0000000A	[ 13] _realloc
0x0000C4FE	0x0000000A	[ 13] _recvfrom
0x0000C508	0x0000000A	[ 13] _recvmsg
0x0000C512	0x0000000A	[ 13] _sendmsg
0x0000C51C	0x0000000A	[ 13] _sendto
0x0000C526	0x0000000A	[ 13] _setsockopt
0x0000C530	0x0000000A	[ 13] _shutdown
0x0000C53A	0x0000000A	[ 13] _socket
0x0000C544	0x0000000A	[ 13] _sscanf
0x0000C54E	0x0000000A	[ 13] _strdup
0x0000C558	0x0000000A	[ 13] _strerror
0x0000C562	0x0000000A	[ 13] _strlen
0x0000C56C	0x0000000A	[ 13] _strncmp
0x0000C576	0x0000000A	[ 13] _strncpy
0x0000C580	0x0000000A	[ 13] _strrchr
0x0000C58A	0x0000000A	[ 13] _strtod
0x0000C594	0x0000000A	[ 13] _strtof
0x0000C59E	0x0000000A	[ 13] _strtol
0x0000C5A8	0x0000000A	[ 13] _strtoll
0x0000C5B2	0x0000000A	[ 13] _strtoul
0x0000C5BC	0x0000000A	[ 13] _strtoull
0x0000C5C6	0x0000000A	[ 13] _unlink
0x0000C5D0	0x0000000A	[ 13] _write
0x0000C5DA	0x00000006	[  1] literal string: inet:
0x0000C5E0	0x00000007	[  1] literal string: inet6:
0x0000C5E7	0x00000006	[  1] literal string: unix:
0x0000C5ED	0x0000000B	[  1] literal string: inet:%s:%s
0x0000C5F8	0x0000000C	[  1] literal string: inet6:%s:%s
0x0000C604	0x00000009	[  1] literal string: unix:@%s
0x0000C60D	0x00000008	[  1] literal string: unix:%s
0x0000C615	0x0000000F	[  1] literal string: addr:family:%d
0x0000C624	0x0000001F	[  1] literal string: getaddrinfo(%s:%s): err=%d(%s)
0x0000C643	0x00000028	[  2] literal string: Too many file descriptors put in buffer
0x0000C66B	0x00000018	[  2] literal string: No internal data buffer
0x0000C683	0x00000015	[  2] literal string: %s(fd=%d) err=%d(%s)
0x0000C698	0x00000006	[  2] literal string: close
0x0000C69E	0x00000004	[  2] literal string: dup
0x0000C6A2	0x00000025	[  2] literal string: No file descriptor at given position
0x0000C6C7	0x0000000C	[  3] literal string: getsockname
0x0000C6D3	0x0000000C	[  3] literal string: getpeername
0x0000C6DF	0x00000009	[  3] literal string: shutdown
0x0000C6E8	0x00000009	[  3] literal string: recvfrom
0x0000C6F1	0x00000008	[  3] literal string: recvmsg
0x0000C6F9	0x00000005	[  3] literal string: read
0x0000C6FE	0x00000023	[  3] literal string: Too many file descriptors received
0x0000C721	0x00000025	[  3] literal string: Not enough file descriptors received
0x0000C746	0x0000001E	[  3] literal string: conn=%p fd=%d exit async mode
0x0000C764	0x00000007	[  3] literal string: sendto
0x0000C76B	0x00000008	[  3] literal string: sendmsg
0x0000C773	0x00000006	[  3] literal string: write
0x0000C779	0x00000021	[  3] literal string: idle send callback not expected.
0x0000C79A	0x00000023	[  3] literal string: pomp_ctx_notify_send failed err=%d
0x0000C7BD	0x00000024	[  3] literal string: pomp_loop_idle_remove failed err=%d
0x0000C7E1	0x0000002D	[  3] literal string: Unable to send message with file descriptors
0x0000C80E	0x0000001F	[  3] literal string: conn=%p fd=%d enter async mode
0x0000C82D	0x0000000A	[  4] literal string: CONNECTED
0x0000C837	0x0000000D	[  4] literal string: DISCONNECTED
0x0000C844	0x00000004	[  4] literal string: MSG
0x0000C848	0x00000008	[  4] literal string: UNKNOWN
0x0000C850	0x00000007	[  4] literal string: SERVER
0x0000C857	0x00000005	[  4] literal string: PEER
0x0000C85C	0x00000007	[  4] literal string: CLIENT
0x0000C863	0x00000006	[  4] literal string: DGRAM
0x0000C869	0x0000001C	[  4] literal string: conn %p not found in ctx %p
0x0000C885	0x0000000E	[  4] literal string: %s err=%d(%s)
0x0000C893	0x00000007	[  4] literal string: socket
0x0000C89A	0x00000018	[  4] literal string: setsockopt.SO_REUSEADDR
0x0000C8B2	0x00000005	[  4] literal string: bind
0x0000C8B7	0x00000007	[  4] literal string: listen
0x0000C8BE	0x0000000C	[  4] literal string: fcntl.GETFD
0x0000C8CA	0x0000000C	[  4] literal string: fcntl.SETFD
0x0000C8D6	0x0000000C	[  4] literal string: fcntl.GETFL
0x0000C8E2	0x0000000C	[  4] literal string: fcntl.SETFL
0x0000C8EE	0x00000007	[  4] literal string: accept
0x0000C8F5	0x00000026	[  4] literal string: Maximum number of connections reached
0x0000C91B	0x00000018	[  4] literal string: setsockopt.SO_KEEPALIVE
0x0000C933	0x00000008	[  4] literal string: connect
0x0000C93B	0x00000014	[  4] literal string: getsockopt.SO_ERROR
0x0000C94F	0x00000021	[  4] literal string: connect(async)(fd=%d) err=%d(%s)
0x0000C970	0x00000023	[  5] literal string: decoder : invalid format char (%c)
0x0000C993	0x00000022	[  5] literal string: decoder : use %%ms instead of %%s
0x0000C9B5	0x0000001B	[  5] literal string: decoder : too many strings
0x0000C9D0	0x00000021	[  5] literal string: decoder : expected %%u after %%p
0x0000C9F1	0x00000023	[  5] literal string: decoder : unsupported format width
0x0000CA14	0x00000028	[  5] literal string: decoder : invalid format specifier (%c)
0x0000CA3C	0x0000001B	[  5] literal string: decoder : unknown type: %d
0x0000CA57	0x0000001F	[  5] literal string: decoder : type mismatch %d(%d)
0x0000CA76	0x00000025	[  5] literal string: decoder : invalid string length (%u)
0x0000CA9B	0x00000025	[  5] literal string: decoder : string not null terminated
0x0000CAC0	0x00000007	[  5] literal string: {ID:%u
0x0000CAC7	0x00000002	[  5] literal string: }
0x0000CAC9	0x00000019	[  5] literal string: decoder : dump truncated
0x0000CAE2	0x00000008	[  5] literal string: , I8:%d
0x0000CAEA	0x00000008	[  5] literal string: , U8:%u
0x0000CAF2	0x00000009	[  5] literal string: , I16:%d
0x0000CAFB	0x00000009	[  5] literal string: , U16:%u
0x0000CB04	0x00000009	[  5] literal string: , I32:%d
0x0000CB0D	0x00000009	[  5] literal string: , U32:%u
0x0000CB16	0x0000000B	[  5] literal string: , I64:%lli
0x0000CB21	0x0000000B	[  5] literal string: , U64:%llu
0x0000CB2C	0x0000000B	[  5] literal string: , STR:'%s'
0x0000CB37	0x00000007	[  5] literal string: , BUF:
0x0000CB3E	0x0000000B	[  5] literal string: , F32:%.7g
0x0000CB49	0x0000000B	[  5] literal string: , F64:%.7g
0x0000CB54	0x00000008	[  5] literal string: , FD:%d
0x0000CB5C	0x00000023	[  6] literal string: encoder : invalid string length %u
0x0000CB7F	0x00000023	[  6] literal string: encoder : invalid format char (%c)
0x0000CBA2	0x00000014	[  6] literal string: Missing %s argument
0x0000CBB6	0x00000004	[  6] literal string: i64
0x0000CBBA	0x00000003	[  6] literal string: i8
0x0000CBBD	0x00000004	[  6] literal string: i16
0x0000CBC1	0x00000004	[  6] literal string: i32
0x0000CBC5	0x00000004	[  6] literal string: u64
0x0000CBC9	0x00000003	[  6] literal string: u8
0x0000CBCC	0x00000004	[  6] literal string: u16
0x0000CBD0	0x00000004	[  6] literal string: u32
0x0000CBD4	0x00000015	[  6] literal string: Missing str argument
0x0000CBE9	0x00000021	[  6] literal string: encoder : expected %%u after %%p
0x0000CC0A	0x00000023	[  6] literal string: encoder : unsupported format width
0x0000CC2D	0x00000004	[  6] literal string: f64
0x0000CC31	0x00000004	[  6] literal string: f32
0x0000CC35	0x00000003	[  6] literal string: fd
0x0000CC38	0x00000028	[  6] literal string: encoder : invalid format specifier (%c)
0x0000CC60	0x00000005	[  6] literal string: %hhx
0x0000CC65	0x00000006	[  6] literal string: %2hhx
0x0000CC6B	0x00000005	[  7] literal string: pomp
0x0000CC70	0x00000020	[  8] literal string: fd %d (%p) not found in loop %p
0x0000CC90	0x00000023	[  8] literal string: fd=%d, cb=%p not removed from loop
0x0000CCB3	0x0000001E	[  8] literal string: fd %d (%p) already in loop %p
0x0000CCD1	0x0000001B	[  8] literal string: fd %d not found in loop %p
0x0000CCEC	0x00000005	[  8] literal string: pipe
0x0000CCF1	0x0000001C	[  8] literal string: Internal fd list corruption
0x0000CD0D	0x00000005	[  8] literal string: poll
0x0000CD12	0x00000014	[  9] literal string: Bad header size: %u
0x0000CD26	0x0000001D	[  9] literal string: Bad header magic: %08x(%08x)
0x0000CD43	0x0000001D	[  9] literal string: Bad message size: %08x(%08x)
0x0000CD60	0x00000011	[ 10] literal string: Invalid state %d
0x0000CD71	0x00000025	[ 10] literal string: Bad header magic %d : 0x%02x(0x%02x)
0x0000CD96	0x00000015	[ 10] literal string: Bad header size : %d
0x0000CDAB	0x00000007	[ 11] literal string: kqueue
0x0000CDB2	0x00000007	[ 11] literal string: kevent
0x0000CDC0	0x00000010	[  4] 16-byte-literal
0x0000CDD0	0x00000224	[  0] compact unwind info
0x0000D000	0x00000008	[  0] non-lazy-pointer-to-local: dyld_stub_binder
0x0000D008	0x00000008	[  0] non-lazy-pointer
0x0000D010	0x00000008	[  0] non-lazy-pointer-to-local: ___stack_chk_guard
0x0000D018	0x00000008	[ 13] ___bzero
0x0000D020	0x00000008	[ 13] ___error
0x0000D028	0x00000008	[ 13] ___memcpy_chk
0x0000D030	0x00000008	[ 13] ___snprintf_chk
0x0000D038	0x00000008	[ 13] ___stack_chk_fail
0x0000D040	0x00000008	[ 13] ___vsnprintf_chk
0x0000D048	0x00000008	[ 13] _accept
0x0000D050	0x00000008	[ 13] _bind
0x0000D058	0x00000008	[ 13] _calloc
0x0000D060	0x00000008	[ 13] _close
0x0000D068	0x00000008	[ 13] _connect
0x0000D070	0x00000008	[ 13] _dup
0x0000D078	0x00000008	[ 13] _fcntl
0x0000D080	0x00000008	[ 13] _free
0x0000D088	0x00000008	[ 13] _freeaddrinfo
0x0000D090	0x00000008	[ 13] _gai_strerror
0x0000D098	0x00000008	[ 13] _getaddrinfo
0x0000D0A0	0x00000008	[ 13] _getnameinfo
0x0000D0A8	0x00000008	[ 13] _getpeername
0x0000D0B0	0x00000008	[ 13] _getsockname
0x0000D0B8	0x00000008	[ 13] _getsockopt
0x0000D0C0	0x00000008	[ 13] _kevent
0x0000D0C8	0x00000008	[ 13] _kqueue
0x0000D0D0	0x00000008	[ 13] _listen
0x0000D0D8	0x00000008	[ 13] _malloc
0x0000D0E0	0x00000008	[ 13] _memcpy
0x0000D0E8	0x00000008	[ 13] _memmove
0x0000D0F0	0x00000008	[ 13] _pipe
0x0000D0F8	0x00000008	[ 13] _poll
0x0000D100	0x00000008	[ 13] _read
0x0000D108	0x00000008	[ 13] _realloc
0x0000D110	0x00000008	[ 13] _recvfrom
0x0000D118	0x00000008	[ 13] _recvmsg
0x0000D120	0x00000008	[ 13] _sendmsg
0x0000D128	0x00000008	[ 13] _sendto
0x0000D130	0x00000008	[ 13] _setsockopt
0x0000D138	0x00000008	[ 13] _shutdown
0x0000D140	0x00000008	[ 13] _socket
0x0000D148	0x00000008	[ 13] _sscanf
0x0000D150	0x00000008	[ 13] _strdup
0x0000D158	0x00000008	[ 13] _strerror
0x0000D160	0x00000008	[ 13] _strlen
0x0000D168	0x00000008	[ 13] _strncmp
0x0000D170	0x00000008	[ 13] _strncpy
0x0000D178	0x00000008	[ 13] _strrchr
0x0000D180	0x00000008	[ 13] _strtod
0x0000D188	0x00000008	[ 13] _strtof
0x0000D190	0x00000008	[ 13] _strtol
0x0000D198	0x00000008	[ 13] _strtoll
0x0000D1A0	0x00000008	[ 13] _strtoul
0x0000D1A8	0x00000008	[ 13] _strtoull
0x0000D1B0	0x00000008	[ 12] _ulog_init_cookie
0x0000D1B8	0x00000008	[ 12] _ulog_log_write
0x0000D1C0	0x00000008	[ 13] _unlink
0x0000D1C8	0x00000008	[ 13] _write
0x0000D1D0	0x00000020	[  4] l_switch.table
0x0000D1F0	0x00000020	[  4] l_switch.table.26
0x0000D210	0x00000040	[  8] _pomp_loop_poll_ops
0x0000D250	0x00000020	[ 11] _pomp_timer_kqueue_ops
0x0000D270	0x00000020	[  7] ___ulog_cookie_pomp
0x0000D290	0x00000008	[  8] _s_pomp_loop_ops
0x0000D298	0x00000008	[ 11] _s_pomp_timer_ops

# Dead Stripped Symbols:
#        	Size    	File  Name
<<dead>> 	0x00000018	[  1] CIE
<<dead>> 	0x00000018	[  2] CIE
<<dead>> 	0x00000010	[  3] 16-byte-literal
<<dead>> 	0x00000015	[  3] literal string: %s(fd=%d) err=%d(%s)
<<dead>> 	0x00000006	[  3] literal string: close
<<dead>> 	0x00000018	[  3] CIE
<<dead>> 	0x00000040	[  4] _pomp_ctx_notify_event
<<dead>> 	0x00000015	[  4] literal string: %s(fd=%d) err=%d(%s)
<<dead>> 	0x0000000C	[  4] literal string: getsockname
<<dead>> 	0x00000018	[  4] CIE
<<dead>> 	0x00000018	[  5] CIE
<<dead>> 	0x00000018	[  6] CIE
<<dead>> 	0x00000020	[  8] _pomp_loop_set_ops
<<dead>> 	0x00000030	[  8] _pomp_loop_find_pfd
<<dead>> 	0x00000070	[  8] _pomp_loop_add_pfd
<<dead>> 	0x000000C0	[  8] _pomp_loop_remove_pfd
<<dead>> 	0x0000000E	[  8] literal string: %s err=%d(%s)
<<dead>> 	0x00000015	[  8] literal string: %s(fd=%d) err=%d(%s)
<<dead>> 	0x00000005	[  8] literal string: read
<<dead>> 	0x00000006	[  8] literal string: write
<<dead>> 	0x00000018	[  8] CIE
<<dead>> 	0x00000018	[  9] CIE
<<dead>> 	0x00000018	[ 10] CIE
<<dead>> 	0x00000020	[ 11] _pomp_timer_set_ops
<<dead>> 	0x0000000E	[ 11] literal string: %s err=%d(%s)
<<dead>> 	0x00000018	[ 11] CIE
