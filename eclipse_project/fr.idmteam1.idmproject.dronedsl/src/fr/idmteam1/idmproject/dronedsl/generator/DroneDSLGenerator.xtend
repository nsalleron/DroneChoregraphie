/*
 * generated by Xtext 2.12.0
 */
package fr.idmteam1.idmproject.dronedsl.generator

import fr.idmteam1.idmproject.dronedsl.droneDSL.FonctionDecl
import fr.idmteam1.idmproject.dronedsl.droneDSL.Import
import fr.idmteam1.idmproject.dronedsl.droneDSL.Model
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class DroneDSLGenerator extends AbstractGenerator {
	
	
	var commandList = newArrayList('Decoller','Atterrir','Gauche','Droite','Avancer','Reculer','Monter','Descendre','RotationGauche','RotationDroite')
	
 	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
 		
 		        fsa.generateFile("basicCommands/Commandes.java",
 "import java.lang.*;
public interface Commandes {
                execute(Second a, Pourcent b)
")
 		
 		
 		//Commands
 		for(e : commandList){
 			fsa.generateFile("basicCommands/"+e+".java",
"import Second.java;
import Pourcent.java;
import java.utils.*;
                
public static void "+e+"() implements Commandes{

                @Override
                public static void execute(Second a, Pourcent b){
                                //TODO
                }




}");
 		}
 		

                for (e : resource.allContents.toIterable.filter(Model)) {
   			fsa.generateFile("Main.java",e.compile)
   			
                }
        }
        
        
   
   def compile(Model e) ''' 
		
		import java.utils.*;
		import basicCommands.*;        

                «IF e.imports!== null»
                         « FOR f:e.imports»
                 		 «f.compile»
                         «ENDFOR»
                «ENDIF»

		public static class Main{

                «FOR f : e.m.mainbody »
           		«f.toString»
                «ENDFOR»
                }
                «IF e.fonctions!== null»
                		« FOR f:e.fonctions»
                                 «f.compile»
                        «ENDFOR»
           «ENDIF»
                
                
        '''
        
        def compile(FonctionDecl e)'''
        		public static void «e.name»(){
        			//TODO
        			
        			
        		}
        '''

        
        
        def compile(Import e) '''
        		import  «e.importURI».java;
        '''

	
}
