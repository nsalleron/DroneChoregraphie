/**
 * generated by Xtext 2.12.0
 */
package fr.idmteam1.idmproject.dronedsl.droneDSLLib.util;

import fr.idmteam1.idmproject.dronedsl.droneDSLLib.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.DroneDSLLibPackage
 * @generated
 */
public class DroneDSLLibAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DroneDSLLibPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DroneDSLLibAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = DroneDSLLibPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DroneDSLLibSwitch<Adapter> modelSwitch =
    new DroneDSLLibSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter casePourcentConst(PourcentConst object)
      {
        return createPourcentConstAdapter();
      }
      @Override
      public Adapter caseMonter(Monter object)
      {
        return createMonterAdapter();
      }
      @Override
      public Adapter caseDescendre(Descendre object)
      {
        return createDescendreAdapter();
      }
      @Override
      public Adapter caseAvancer(Avancer object)
      {
        return createAvancerAdapter();
      }
      @Override
      public Adapter caseReculer(Reculer object)
      {
        return createReculerAdapter();
      }
      @Override
      public Adapter caseGauche(Gauche object)
      {
        return createGaucheAdapter();
      }
      @Override
      public Adapter caseDroite(Droite object)
      {
        return createDroiteAdapter();
      }
      @Override
      public Adapter casePause(Pause object)
      {
        return createPauseAdapter();
      }
      @Override
      public Adapter caseRotationGauche(RotationGauche object)
      {
        return createRotationGaucheAdapter();
      }
      @Override
      public Adapter caseRotationDroite(RotationDroite object)
      {
        return createRotationDroiteAdapter();
      }
      @Override
      public Adapter caseStatement(Statement object)
      {
        return createStatementAdapter();
      }
      @Override
      public Adapter caseFonctionDecl(FonctionDecl object)
      {
        return createFonctionDeclAdapter();
      }
      @Override
      public Adapter casePourcentDecl(PourcentDecl object)
      {
        return createPourcentDeclAdapter();
      }
      @Override
      public Adapter caseIntDecl(IntDecl object)
      {
        return createIntDeclAdapter();
      }
      @Override
      public Adapter caseVarDecl(VarDecl object)
      {
        return createVarDeclAdapter();
      }
      @Override
      public Adapter casePourcentExp(PourcentExp object)
      {
        return createPourcentExpAdapter();
      }
      @Override
      public Adapter caseRefIntVar(RefIntVar object)
      {
        return createRefIntVarAdapter();
      }
      @Override
      public Adapter caseRefPourcentVar(RefPourcentVar object)
      {
        return createRefPourcentVarAdapter();
      }
      @Override
      public Adapter caseIntConstante(IntConstante object)
      {
        return createIntConstanteAdapter();
      }
      @Override
      public Adapter caseIntExp(IntExp object)
      {
        return createIntExpAdapter();
      }
      @Override
      public Adapter caseMD(MD object)
      {
        return createMDAdapter();
      }
      @Override
      public Adapter caseGDr(GDr object)
      {
        return createGDrAdapter();
      }
      @Override
      public Adapter caseRGRD(RGRD object)
      {
        return createRGRDAdapter();
      }
      @Override
      public Adapter caseAR(AR object)
      {
        return createARAdapter();
      }
      @Override
      public Adapter caseParallele(Parallele object)
      {
        return createParalleleAdapter();
      }
      @Override
      public Adapter caseParallele2(Parallele2 object)
      {
        return createParallele2Adapter();
      }
      @Override
      public Adapter caseParallele3(Parallele3 object)
      {
        return createParallele3Adapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.PourcentConst <em>Pourcent Const</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.PourcentConst
   * @generated
   */
  public Adapter createPourcentConstAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Monter <em>Monter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Monter
   * @generated
   */
  public Adapter createMonterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Descendre <em>Descendre</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Descendre
   * @generated
   */
  public Adapter createDescendreAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Avancer <em>Avancer</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Avancer
   * @generated
   */
  public Adapter createAvancerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Reculer <em>Reculer</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Reculer
   * @generated
   */
  public Adapter createReculerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Gauche <em>Gauche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Gauche
   * @generated
   */
  public Adapter createGaucheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Droite <em>Droite</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Droite
   * @generated
   */
  public Adapter createDroiteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Pause <em>Pause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Pause
   * @generated
   */
  public Adapter createPauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.RotationGauche <em>Rotation Gauche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.RotationGauche
   * @generated
   */
  public Adapter createRotationGaucheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.RotationDroite <em>Rotation Droite</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.RotationDroite
   * @generated
   */
  public Adapter createRotationDroiteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Statement
   * @generated
   */
  public Adapter createStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.FonctionDecl <em>Fonction Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.FonctionDecl
   * @generated
   */
  public Adapter createFonctionDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.PourcentDecl <em>Pourcent Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.PourcentDecl
   * @generated
   */
  public Adapter createPourcentDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.IntDecl <em>Int Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.IntDecl
   * @generated
   */
  public Adapter createIntDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.VarDecl <em>Var Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.VarDecl
   * @generated
   */
  public Adapter createVarDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.PourcentExp <em>Pourcent Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.PourcentExp
   * @generated
   */
  public Adapter createPourcentExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.RefIntVar <em>Ref Int Var</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.RefIntVar
   * @generated
   */
  public Adapter createRefIntVarAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.RefPourcentVar <em>Ref Pourcent Var</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.RefPourcentVar
   * @generated
   */
  public Adapter createRefPourcentVarAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.IntConstante <em>Int Constante</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.IntConstante
   * @generated
   */
  public Adapter createIntConstanteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.IntExp <em>Int Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.IntExp
   * @generated
   */
  public Adapter createIntExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.MD <em>MD</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.MD
   * @generated
   */
  public Adapter createMDAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.GDr <em>GDr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.GDr
   * @generated
   */
  public Adapter createGDrAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.RGRD <em>RGRD</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.RGRD
   * @generated
   */
  public Adapter createRGRDAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.AR <em>AR</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.AR
   * @generated
   */
  public Adapter createARAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Parallele <em>Parallele</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Parallele
   * @generated
   */
  public Adapter createParalleleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Parallele2 <em>Parallele2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Parallele2
   * @generated
   */
  public Adapter createParallele2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link fr.idmteam1.idmproject.dronedsl.droneDSLLib.Parallele3 <em>Parallele3</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see fr.idmteam1.idmproject.dronedsl.droneDSLLib.Parallele3
   * @generated
   */
  public Adapter createParallele3Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //DroneDSLLibAdapterFactory
