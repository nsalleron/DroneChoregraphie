/**
 * generated by Xtext 2.12.0
 */
package fr.idmteam1.idmproject.dronedsl.droneDSL.util;

import fr.idmteam1.idmproject.dronedsl.droneDSL.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see fr.idmteam1.idmproject.dronedsl.droneDSL.DroneDSLPackage
 * @generated
 */
public class DroneDSLSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DroneDSLPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DroneDSLSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DroneDSLPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DroneDSLPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.MAIN:
      {
        Main main = (Main)theEObject;
        T result = caseMain(main);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.POURCENT_CONST:
      {
        PourcentConst pourcentConst = (PourcentConst)theEObject;
        T result = casePourcentConst(pourcentConst);
        if (result == null) result = casePourcentExp(pourcentConst);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.IMPORT:
      {
        Import import_ = (Import)theEObject;
        T result = caseImport(import_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.POURCENT_VITESSE_HAUTEUR_MAX:
      {
        Pourcent_vitesse_hauteur_max pourcent_vitesse_hauteur_max = (Pourcent_vitesse_hauteur_max)theEObject;
        T result = casePourcent_vitesse_hauteur_max(pourcent_vitesse_hauteur_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.POURCENT_VITESSE_DEPLACEMENT_MAX:
      {
        Pourcent_vitesse_deplacement_max pourcent_vitesse_deplacement_max = (Pourcent_vitesse_deplacement_max)theEObject;
        T result = casePourcent_vitesse_deplacement_max(pourcent_vitesse_deplacement_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.POURCENT_VITESSE_ROTATION_MAX:
      {
        Pourcent_vitesse_rotation_max pourcent_vitesse_rotation_max = (Pourcent_vitesse_rotation_max)theEObject;
        T result = casePourcent_vitesse_rotation_max(pourcent_vitesse_rotation_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.HAUTEUR_MAX:
      {
        Hauteur_max hauteur_max = (Hauteur_max)theEObject;
        T result = caseHauteur_max(hauteur_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.ELOIGNEMENT_MAX:
      {
        Eloignement_max eloignement_max = (Eloignement_max)theEObject;
        T result = caseEloignement_max(eloignement_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.MONTER:
      {
        Monter monter = (Monter)theEObject;
        T result = caseMonter(monter);
        if (result == null) result = caseStatement(monter);
        if (result == null) result = caseMD(monter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.DESCENDRE:
      {
        Descendre descendre = (Descendre)theEObject;
        T result = caseDescendre(descendre);
        if (result == null) result = caseStatement(descendre);
        if (result == null) result = caseMD(descendre);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.AVANCER:
      {
        Avancer avancer = (Avancer)theEObject;
        T result = caseAvancer(avancer);
        if (result == null) result = caseStatement(avancer);
        if (result == null) result = caseAR(avancer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.RECULER:
      {
        Reculer reculer = (Reculer)theEObject;
        T result = caseReculer(reculer);
        if (result == null) result = caseStatement(reculer);
        if (result == null) result = caseAR(reculer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.GAUCHE:
      {
        Gauche gauche = (Gauche)theEObject;
        T result = caseGauche(gauche);
        if (result == null) result = caseStatement(gauche);
        if (result == null) result = caseGDr(gauche);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.DROITE:
      {
        Droite droite = (Droite)theEObject;
        T result = caseDroite(droite);
        if (result == null) result = caseStatement(droite);
        if (result == null) result = caseGDr(droite);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.PAUSE:
      {
        Pause pause = (Pause)theEObject;
        T result = casePause(pause);
        if (result == null) result = caseStatement(pause);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.ROTATION_GAUCHE:
      {
        RotationGauche rotationGauche = (RotationGauche)theEObject;
        T result = caseRotationGauche(rotationGauche);
        if (result == null) result = caseStatement(rotationGauche);
        if (result == null) result = caseRGRD(rotationGauche);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.ROTATION_DROITE:
      {
        RotationDroite rotationDroite = (RotationDroite)theEObject;
        T result = caseRotationDroite(rotationDroite);
        if (result == null) result = caseStatement(rotationDroite);
        if (result == null) result = caseRGRD(rotationDroite);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.STATEMENT:
      {
        Statement statement = (Statement)theEObject;
        T result = caseStatement(statement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.FONCTION_DECL:
      {
        FonctionDecl fonctionDecl = (FonctionDecl)theEObject;
        T result = caseFonctionDecl(fonctionDecl);
        if (result == null) result = caseFonctionRef(fonctionDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.FONCTION_EXTERNE:
      {
        FonctionExterne fonctionExterne = (FonctionExterne)theEObject;
        T result = caseFonctionExterne(fonctionExterne);
        if (result == null) result = caseFonctionRef(fonctionExterne);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.FONCTION_REF:
      {
        FonctionRef fonctionRef = (FonctionRef)theEObject;
        T result = caseFonctionRef(fonctionRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.POURCENT_DECL:
      {
        PourcentDecl pourcentDecl = (PourcentDecl)theEObject;
        T result = casePourcentDecl(pourcentDecl);
        if (result == null) result = caseVarDecl(pourcentDecl);
        if (result == null) result = caseStatement(pourcentDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.INT_DECL:
      {
        IntDecl intDecl = (IntDecl)theEObject;
        T result = caseIntDecl(intDecl);
        if (result == null) result = caseVarDecl(intDecl);
        if (result == null) result = caseStatement(intDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.VAR_DECL:
      {
        VarDecl varDecl = (VarDecl)theEObject;
        T result = caseVarDecl(varDecl);
        if (result == null) result = caseStatement(varDecl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.POURCENT_EXP:
      {
        PourcentExp pourcentExp = (PourcentExp)theEObject;
        T result = casePourcentExp(pourcentExp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.REF_INT_VAR:
      {
        RefIntVar refIntVar = (RefIntVar)theEObject;
        T result = caseRefIntVar(refIntVar);
        if (result == null) result = caseIntExp(refIntVar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.REF_POURCENT_VAR:
      {
        RefPourcentVar refPourcentVar = (RefPourcentVar)theEObject;
        T result = caseRefPourcentVar(refPourcentVar);
        if (result == null) result = casePourcentExp(refPourcentVar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.INT_CONSTANTE:
      {
        IntConstante intConstante = (IntConstante)theEObject;
        T result = caseIntConstante(intConstante);
        if (result == null) result = caseIntExp(intConstante);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.INT_EXP:
      {
        IntExp intExp = (IntExp)theEObject;
        T result = caseIntExp(intExp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.FONCTION_CALL:
      {
        FonctionCall fonctionCall = (FonctionCall)theEObject;
        T result = caseFonctionCall(fonctionCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.MD:
      {
        MD md = (MD)theEObject;
        T result = caseMD(md);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.GDR:
      {
        GDr gDr = (GDr)theEObject;
        T result = caseGDr(gDr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.RGRD:
      {
        RGRD rgrd = (RGRD)theEObject;
        T result = caseRGRD(rgrd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.AR:
      {
        AR ar = (AR)theEObject;
        T result = caseAR(ar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.PARALLELE:
      {
        Parallele parallele = (Parallele)theEObject;
        T result = caseParallele(parallele);
        if (result == null) result = caseStatement(parallele);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.PARALLELE2:
      {
        Parallele2 parallele2 = (Parallele2)theEObject;
        T result = caseParallele2(parallele2);
        if (result == null) result = caseParallele(parallele2);
        if (result == null) result = caseStatement(parallele2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.PARALLELE3:
      {
        Parallele3 parallele3 = (Parallele3)theEObject;
        T result = caseParallele3(parallele3);
        if (result == null) result = caseParallele(parallele3);
        if (result == null) result = caseStatement(parallele3);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DroneDSLPackage.PARALLELE4:
      {
        Parallele4 parallele4 = (Parallele4)theEObject;
        T result = caseParallele4(parallele4);
        if (result == null) result = caseParallele(parallele4);
        if (result == null) result = caseStatement(parallele4);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Main</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Main</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMain(Main object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pourcent Const</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pourcent Const</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePourcentConst(PourcentConst object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImport(Import object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pourcent vitesse hauteur max</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pourcent vitesse hauteur max</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePourcent_vitesse_hauteur_max(Pourcent_vitesse_hauteur_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pourcent vitesse deplacement max</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pourcent vitesse deplacement max</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePourcent_vitesse_deplacement_max(Pourcent_vitesse_deplacement_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pourcent vitesse rotation max</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pourcent vitesse rotation max</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePourcent_vitesse_rotation_max(Pourcent_vitesse_rotation_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Hauteur max</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Hauteur max</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHauteur_max(Hauteur_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Eloignement max</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Eloignement max</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEloignement_max(Eloignement_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Monter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Monter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMonter(Monter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Descendre</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Descendre</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDescendre(Descendre object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Avancer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Avancer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAvancer(Avancer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Reculer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Reculer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReculer(Reculer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Gauche</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Gauche</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGauche(Gauche object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Droite</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Droite</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDroite(Droite object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pause</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pause</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePause(Pause object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rotation Gauche</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rotation Gauche</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRotationGauche(RotationGauche object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rotation Droite</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rotation Droite</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRotationDroite(RotationDroite object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatement(Statement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fonction Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fonction Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFonctionDecl(FonctionDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fonction Externe</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fonction Externe</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFonctionExterne(FonctionExterne object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fonction Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fonction Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFonctionRef(FonctionRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pourcent Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pourcent Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePourcentDecl(PourcentDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntDecl(IntDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Var Decl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Var Decl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVarDecl(VarDecl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pourcent Exp</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pourcent Exp</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePourcentExp(PourcentExp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ref Int Var</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ref Int Var</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRefIntVar(RefIntVar object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ref Pourcent Var</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ref Pourcent Var</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRefPourcentVar(RefPourcentVar object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Constante</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Constante</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntConstante(IntConstante object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Exp</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Exp</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntExp(IntExp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fonction Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fonction Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFonctionCall(FonctionCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMD(MD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GDr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GDr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGDr(GDr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RGRD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RGRD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRGRD(RGRD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAR(AR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parallele</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parallele</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParallele(Parallele object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parallele2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parallele2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParallele2(Parallele2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parallele3</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parallele3</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParallele3(Parallele3 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parallele4</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parallele4</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParallele4(Parallele4 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DroneDSLSwitch
