/**
 * generated by Xtext 2.12.0
 */
package fr.idmteam1.idmproject.dronedsl.droneDSL.impl;

import fr.idmteam1.idmproject.dronedsl.droneDSL.DroneDSLPackage;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Eloignement_max;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Hauteur_max;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Pourcent_vitesse_deplacement_max;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Pourcent_vitesse_hauteur_max;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Pourcent_vitesse_rotation_max;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Prologue;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Prologue</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.PrologueImpl#getVitesse_verticale <em>Vitesse verticale</em>}</li>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.PrologueImpl#getVitesse_deplacement <em>Vitesse deplacement</em>}</li>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.PrologueImpl#getVitesse_rotation <em>Vitesse rotation</em>}</li>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.PrologueImpl#getHauteur <em>Hauteur</em>}</li>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.PrologueImpl#getEloignement <em>Eloignement</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PrologueImpl extends MinimalEObjectImpl.Container implements Prologue
{
  /**
   * The cached value of the '{@link #getVitesse_verticale() <em>Vitesse verticale</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVitesse_verticale()
   * @generated
   * @ordered
   */
  protected Pourcent_vitesse_hauteur_max vitesse_verticale;

  /**
   * The cached value of the '{@link #getVitesse_deplacement() <em>Vitesse deplacement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVitesse_deplacement()
   * @generated
   * @ordered
   */
  protected Pourcent_vitesse_deplacement_max vitesse_deplacement;

  /**
   * The cached value of the '{@link #getVitesse_rotation() <em>Vitesse rotation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVitesse_rotation()
   * @generated
   * @ordered
   */
  protected Pourcent_vitesse_rotation_max vitesse_rotation;

  /**
   * The cached value of the '{@link #getHauteur() <em>Hauteur</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHauteur()
   * @generated
   * @ordered
   */
  protected Hauteur_max hauteur;

  /**
   * The cached value of the '{@link #getEloignement() <em>Eloignement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEloignement()
   * @generated
   * @ordered
   */
  protected Eloignement_max eloignement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PrologueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DroneDSLPackage.Literals.PROLOGUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pourcent_vitesse_hauteur_max getVitesse_verticale()
  {
    return vitesse_verticale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVitesse_verticale(Pourcent_vitesse_hauteur_max newVitesse_verticale, NotificationChain msgs)
  {
    Pourcent_vitesse_hauteur_max oldVitesse_verticale = vitesse_verticale;
    vitesse_verticale = newVitesse_verticale;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE, oldVitesse_verticale, newVitesse_verticale);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVitesse_verticale(Pourcent_vitesse_hauteur_max newVitesse_verticale)
  {
    if (newVitesse_verticale != vitesse_verticale)
    {
      NotificationChain msgs = null;
      if (vitesse_verticale != null)
        msgs = ((InternalEObject)vitesse_verticale).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE, null, msgs);
      if (newVitesse_verticale != null)
        msgs = ((InternalEObject)newVitesse_verticale).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE, null, msgs);
      msgs = basicSetVitesse_verticale(newVitesse_verticale, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE, newVitesse_verticale, newVitesse_verticale));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pourcent_vitesse_deplacement_max getVitesse_deplacement()
  {
    return vitesse_deplacement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVitesse_deplacement(Pourcent_vitesse_deplacement_max newVitesse_deplacement, NotificationChain msgs)
  {
    Pourcent_vitesse_deplacement_max oldVitesse_deplacement = vitesse_deplacement;
    vitesse_deplacement = newVitesse_deplacement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT, oldVitesse_deplacement, newVitesse_deplacement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVitesse_deplacement(Pourcent_vitesse_deplacement_max newVitesse_deplacement)
  {
    if (newVitesse_deplacement != vitesse_deplacement)
    {
      NotificationChain msgs = null;
      if (vitesse_deplacement != null)
        msgs = ((InternalEObject)vitesse_deplacement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT, null, msgs);
      if (newVitesse_deplacement != null)
        msgs = ((InternalEObject)newVitesse_deplacement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT, null, msgs);
      msgs = basicSetVitesse_deplacement(newVitesse_deplacement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT, newVitesse_deplacement, newVitesse_deplacement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pourcent_vitesse_rotation_max getVitesse_rotation()
  {
    return vitesse_rotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVitesse_rotation(Pourcent_vitesse_rotation_max newVitesse_rotation, NotificationChain msgs)
  {
    Pourcent_vitesse_rotation_max oldVitesse_rotation = vitesse_rotation;
    vitesse_rotation = newVitesse_rotation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__VITESSE_ROTATION, oldVitesse_rotation, newVitesse_rotation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVitesse_rotation(Pourcent_vitesse_rotation_max newVitesse_rotation)
  {
    if (newVitesse_rotation != vitesse_rotation)
    {
      NotificationChain msgs = null;
      if (vitesse_rotation != null)
        msgs = ((InternalEObject)vitesse_rotation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__VITESSE_ROTATION, null, msgs);
      if (newVitesse_rotation != null)
        msgs = ((InternalEObject)newVitesse_rotation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__VITESSE_ROTATION, null, msgs);
      msgs = basicSetVitesse_rotation(newVitesse_rotation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__VITESSE_ROTATION, newVitesse_rotation, newVitesse_rotation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Hauteur_max getHauteur()
  {
    return hauteur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHauteur(Hauteur_max newHauteur, NotificationChain msgs)
  {
    Hauteur_max oldHauteur = hauteur;
    hauteur = newHauteur;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__HAUTEUR, oldHauteur, newHauteur);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHauteur(Hauteur_max newHauteur)
  {
    if (newHauteur != hauteur)
    {
      NotificationChain msgs = null;
      if (hauteur != null)
        msgs = ((InternalEObject)hauteur).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__HAUTEUR, null, msgs);
      if (newHauteur != null)
        msgs = ((InternalEObject)newHauteur).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__HAUTEUR, null, msgs);
      msgs = basicSetHauteur(newHauteur, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__HAUTEUR, newHauteur, newHauteur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Eloignement_max getEloignement()
  {
    return eloignement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEloignement(Eloignement_max newEloignement, NotificationChain msgs)
  {
    Eloignement_max oldEloignement = eloignement;
    eloignement = newEloignement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__ELOIGNEMENT, oldEloignement, newEloignement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEloignement(Eloignement_max newEloignement)
  {
    if (newEloignement != eloignement)
    {
      NotificationChain msgs = null;
      if (eloignement != null)
        msgs = ((InternalEObject)eloignement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__ELOIGNEMENT, null, msgs);
      if (newEloignement != null)
        msgs = ((InternalEObject)newEloignement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.PROLOGUE__ELOIGNEMENT, null, msgs);
      msgs = basicSetEloignement(newEloignement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneDSLPackage.PROLOGUE__ELOIGNEMENT, newEloignement, newEloignement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE:
        return basicSetVitesse_verticale(null, msgs);
      case DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT:
        return basicSetVitesse_deplacement(null, msgs);
      case DroneDSLPackage.PROLOGUE__VITESSE_ROTATION:
        return basicSetVitesse_rotation(null, msgs);
      case DroneDSLPackage.PROLOGUE__HAUTEUR:
        return basicSetHauteur(null, msgs);
      case DroneDSLPackage.PROLOGUE__ELOIGNEMENT:
        return basicSetEloignement(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE:
        return getVitesse_verticale();
      case DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT:
        return getVitesse_deplacement();
      case DroneDSLPackage.PROLOGUE__VITESSE_ROTATION:
        return getVitesse_rotation();
      case DroneDSLPackage.PROLOGUE__HAUTEUR:
        return getHauteur();
      case DroneDSLPackage.PROLOGUE__ELOIGNEMENT:
        return getEloignement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE:
        setVitesse_verticale((Pourcent_vitesse_hauteur_max)newValue);
        return;
      case DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT:
        setVitesse_deplacement((Pourcent_vitesse_deplacement_max)newValue);
        return;
      case DroneDSLPackage.PROLOGUE__VITESSE_ROTATION:
        setVitesse_rotation((Pourcent_vitesse_rotation_max)newValue);
        return;
      case DroneDSLPackage.PROLOGUE__HAUTEUR:
        setHauteur((Hauteur_max)newValue);
        return;
      case DroneDSLPackage.PROLOGUE__ELOIGNEMENT:
        setEloignement((Eloignement_max)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE:
        setVitesse_verticale((Pourcent_vitesse_hauteur_max)null);
        return;
      case DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT:
        setVitesse_deplacement((Pourcent_vitesse_deplacement_max)null);
        return;
      case DroneDSLPackage.PROLOGUE__VITESSE_ROTATION:
        setVitesse_rotation((Pourcent_vitesse_rotation_max)null);
        return;
      case DroneDSLPackage.PROLOGUE__HAUTEUR:
        setHauteur((Hauteur_max)null);
        return;
      case DroneDSLPackage.PROLOGUE__ELOIGNEMENT:
        setEloignement((Eloignement_max)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DroneDSLPackage.PROLOGUE__VITESSE_VERTICALE:
        return vitesse_verticale != null;
      case DroneDSLPackage.PROLOGUE__VITESSE_DEPLACEMENT:
        return vitesse_deplacement != null;
      case DroneDSLPackage.PROLOGUE__VITESSE_ROTATION:
        return vitesse_rotation != null;
      case DroneDSLPackage.PROLOGUE__HAUTEUR:
        return hauteur != null;
      case DroneDSLPackage.PROLOGUE__ELOIGNEMENT:
        return eloignement != null;
    }
    return super.eIsSet(featureID);
  }
  @Override
  public String toString() {
      return "static Prologue prologue_"+this.hashCode()+" = new Prologue("
              +this.vitesse_verticale.getVitesse_verticale()+", "
      			  +this.vitesse_deplacement.getVitesse_deplacement()+", "
      			  +this.vitesse_rotation.getVitesse_rotation()+", "
      			  +this.hauteur+", "
      			  +this.eloignement+");";
  }

} //ModifiedPrologueImpl toString added
