/**
 * generated by Xtext 2.12.0
 */
package fr.idmteam1.idmproject.dronedsl.droneDSL.impl;

import fr.idmteam1.idmproject.dronedsl.droneDSL.DroneDSLPackage;
import fr.idmteam1.idmproject.dronedsl.droneDSL.FonctionDecl;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Import;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Main;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Model;
import fr.idmteam1.idmproject.dronedsl.droneDSL.Prologue;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.ModelImpl#getImports <em>Imports</em>}</li>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.ModelImpl#getPrologue <em>Prologue</em>}</li>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.ModelImpl#getM <em>M</em>}</li>
 *   <li>{@link fr.idmteam1.idmproject.dronedsl.droneDSL.impl.ModelImpl#getFonctions <em>Fonctions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getImports() <em>Imports</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImports()
   * @generated
   * @ordered
   */
  protected EList<Import> imports;

  /**
   * The cached value of the '{@link #getPrologue() <em>Prologue</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrologue()
   * @generated
   * @ordered
   */
  protected Prologue prologue;

  /**
   * The cached value of the '{@link #getM() <em>M</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getM()
   * @generated
   * @ordered
   */
  protected Main m;

  /**
   * The cached value of the '{@link #getFonctions() <em>Fonctions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFonctions()
   * @generated
   * @ordered
   */
  protected EList<FonctionDecl> fonctions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DroneDSLPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Import> getImports()
  {
    if (imports == null)
    {
      imports = new EObjectContainmentEList<Import>(Import.class, this, DroneDSLPackage.MODEL__IMPORTS);
    }
    return imports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Prologue getPrologue()
  {
    return prologue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrologue(Prologue newPrologue, NotificationChain msgs)
  {
    Prologue oldPrologue = prologue;
    prologue = newPrologue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneDSLPackage.MODEL__PROLOGUE, oldPrologue, newPrologue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrologue(Prologue newPrologue)
  {
    if (newPrologue != prologue)
    {
      NotificationChain msgs = null;
      if (prologue != null)
        msgs = ((InternalEObject)prologue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.MODEL__PROLOGUE, null, msgs);
      if (newPrologue != null)
        msgs = ((InternalEObject)newPrologue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.MODEL__PROLOGUE, null, msgs);
      msgs = basicSetPrologue(newPrologue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneDSLPackage.MODEL__PROLOGUE, newPrologue, newPrologue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Main getM()
  {
    return m;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetM(Main newM, NotificationChain msgs)
  {
    Main oldM = m;
    m = newM;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneDSLPackage.MODEL__M, oldM, newM);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setM(Main newM)
  {
    if (newM != m)
    {
      NotificationChain msgs = null;
      if (m != null)
        msgs = ((InternalEObject)m).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.MODEL__M, null, msgs);
      if (newM != null)
        msgs = ((InternalEObject)newM).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneDSLPackage.MODEL__M, null, msgs);
      msgs = basicSetM(newM, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneDSLPackage.MODEL__M, newM, newM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<FonctionDecl> getFonctions()
  {
    if (fonctions == null)
    {
      fonctions = new EObjectContainmentEList<FonctionDecl>(FonctionDecl.class, this, DroneDSLPackage.MODEL__FONCTIONS);
    }
    return fonctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DroneDSLPackage.MODEL__IMPORTS:
        return ((InternalEList<?>)getImports()).basicRemove(otherEnd, msgs);
      case DroneDSLPackage.MODEL__PROLOGUE:
        return basicSetPrologue(null, msgs);
      case DroneDSLPackage.MODEL__M:
        return basicSetM(null, msgs);
      case DroneDSLPackage.MODEL__FONCTIONS:
        return ((InternalEList<?>)getFonctions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DroneDSLPackage.MODEL__IMPORTS:
        return getImports();
      case DroneDSLPackage.MODEL__PROLOGUE:
        return getPrologue();
      case DroneDSLPackage.MODEL__M:
        return getM();
      case DroneDSLPackage.MODEL__FONCTIONS:
        return getFonctions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DroneDSLPackage.MODEL__IMPORTS:
        getImports().clear();
        getImports().addAll((Collection<? extends Import>)newValue);
        return;
      case DroneDSLPackage.MODEL__PROLOGUE:
        setPrologue((Prologue)newValue);
        return;
      case DroneDSLPackage.MODEL__M:
        setM((Main)newValue);
        return;
      case DroneDSLPackage.MODEL__FONCTIONS:
        getFonctions().clear();
        getFonctions().addAll((Collection<? extends FonctionDecl>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DroneDSLPackage.MODEL__IMPORTS:
        getImports().clear();
        return;
      case DroneDSLPackage.MODEL__PROLOGUE:
        setPrologue((Prologue)null);
        return;
      case DroneDSLPackage.MODEL__M:
        setM((Main)null);
        return;
      case DroneDSLPackage.MODEL__FONCTIONS:
        getFonctions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DroneDSLPackage.MODEL__IMPORTS:
        return imports != null && !imports.isEmpty();
      case DroneDSLPackage.MODEL__PROLOGUE:
        return prologue != null;
      case DroneDSLPackage.MODEL__M:
        return m != null;
      case DroneDSLPackage.MODEL__FONCTIONS:
        return fonctions != null && !fonctions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
