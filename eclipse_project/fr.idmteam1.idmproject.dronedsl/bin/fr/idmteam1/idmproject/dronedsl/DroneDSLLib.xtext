grammar fr.idmteam1.idmproject.dronedsl.DroneDSLLib with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate droneDSLLib "http://www.idmteam1.fr/idmproject/dronedsl/DroneDSLLib"

Model:
	(
		(fonctions+=FonctionDecl)*
	);

// Types

terminal SECONDE:
	INT
;

terminal POURCENT returns ecore::EString:
	 (('1'..'9')|('1'..'9')('0'..'9')|('100'..'100'))'%'
;

// Variables

SecondeConst:
	val=SECONDE
;
PourcentConst:
	val=POURCENT
;

SecondeDecl:
	'Seconde' name=ID '=' val=SecondeConst
;
PourcentDecl:
	'Pourcent' name=ID '=' val=PourcentConst
;
VarDecl:
	PourcentDecl|SecondeDecl
;

RefSecondeVar:
	var=[SecondeDecl]
;
RefPourcentVar:
	var=[PourcentDecl]
;

PourcentExp:
	PourcentConst|RefPourcentVar
;
SecondeExp:
	SecondeConst|RefSecondeVar
;

// Commandes de base
	
Decoller:
	str='decoller()'
;

Atterrir:
	str='atterrir()'
;

Monter:
	'monter('duree=SecondeExp ',' vitesse_verticale=PourcentExp')'
;

Descendre:
	'descendre('duree=SecondeExp',' vitesse_verticale=PourcentExp')'
;

Avancer:
	'avancer('duree=SecondeExp',' vitesse_deplacement=PourcentExp')'
;

Reculer:
	'reculer('duree=SecondeExp',' vitesse_deplacement=PourcentExp')'
;

Gauche:
	'gauche('duree=SecondeExp',' vitesse_deplacement=PourcentExp')'
;

Droite:
	'droite('duree=SecondeExp',' vitesse_deplacement=PourcentExp')'
;

RotationGauche:
	'rotation_gauche('duree=SecondeExp',' vitesse_rotation=PourcentExp')'
;

RotationDroite:
	'rotation_droite('duree=SecondeExp',' vitesse_rotation=PourcentExp')'
;

Pause:
	'droite('duree=SecondeExp')'
;

Mouvement:
	Avancer|Reculer|Monter|Descendre|Gauche|Droite|RotationGauche|RotationDroite|Parallele
;

CommandeBasique:
	Decoller|Atterrir|Avancer|Reculer|Monter|Descendre|Gauche|Droite|RotationGauche|RotationDroite|Pause
;

// Fonctions

FonctionDecl:
	'func' name=ID '()''{'
		 body += (VarDecl|CommandeBasique|Parallele|FonctionCall)*
	'}'
;

FonctionCall:
	ref=[FonctionDecl]'()'
;

// Paralleles

MD : 
	(Monter|Descendre)
;

GDr : 
	(Gauche|Droite)
;

RGRD :
	(RotationGauche|RotationDroite)
;

AR:
	(Avancer|Reculer)
;

Parallele:
	Parallele2|Parallele3|Parallele4
;

Parallele2:
	(a=MD)		'&' (t=GDr)		|
	(a=MD)		'&' (t=AR)		|
	(a=MD)		'&' (t=RGRD)		|
	(t=GDr)		'&' (b=AR) 		|
	(t=GDr)		'&' (b=MD )		|
	(t=GDr)		'&' (b=RGRD)		|
	(t=RGRD) 	'&' (a=MD )		|
	(t=RGRD) 	'&' (a=AR)		|
	(t=RGRD) 	'&' (a=GDr)		|
	(t=AR)		'&' (a=MD )		|
	(t=AR) 		'&' (a=RGRD) 	|
	(t=AR) 		'&' (a=GDr) 
;

Parallele3:
	(a=AR) 	'&' (b=GDr) 		'&' (c=MD)		|
	(a=AR) 	'&' (b=GDr) 		'&' (c =RGRD)	|
	(a=AR) 	'&' (b=MD)  		'&' (c = GDr)	|
	(a=AR) 	'&' (b=MD)		'&' (c= RGRD) 	|
	(a=AR) 	'&' (b=RGRD) 	'&' (c = MD) 	|
	(a=AR) 	'&' (b=RGRD) 	'&' (c = GDr) 	|
	(a=GDr) '&' (b=AR) 		'&' (c=MD)		|
	(a=GDr) '&' (b=AR) 		'&' (c=RGRD)		|
	(a=GDr) '&' (b=MD) 		'&' (c=AR)		|
	(a=GDr) '&' (b=MD) 		'&' (c=RGRD)		|
	(a=GDr) '&' (b=RGRD) 	'&' (c=AR)		|
	(a=GDr) '&' (b=RGRD) 	'&' (c=MD)		|
	(a=MD) 	'&' (b=AR) 		'&' (c=GDr)		|
	(a=MD) 	'&' (b=AR) 		'&' (c=RGRD)		|
	(a=MD) 	'&' (b=GDr) 		'&' (c=AR)		|
	(a=MD) 	'&' (b=GDr) 		'&' (c=RGRD)		|
	(a=MD) 	'&' (b=RGRD) 	'&' (c=GDr)		|
	(a=MD) 	'&' (b=RGRD) 	'&' (c=AR)		|
	(a=RGRD)'&' (b=AR) 		'&' (c=MD)		|
	(a=RGRD)'&' (b=AR) 		'&' (c=GDr)		|
	(a=RGRD)'&' (b=MD) 		'&' (c=AR)		|
	(a=RGRD)'&' (b=MD) 		'&' (c=GDr)		|
	(a=RGRD)'&' (b=GDr) 		'&' (c=MD)		|
	(a=RGRD)'&' (b=GDr) 		'&' (c=AR)	
;

//Voici les 4 commandes 
Parallele4:
	(a=AR) 	'&' (b=GDr) 		'&' (c=MD)			'&' (d=RGRD) 	|
	(a=AR) 	'&' (b=GDr) 		'&' (c =RGRD)		'&' (d=MD)		|
	(a=AR) 	'&' (b=MD)  		'&' (c = GDr)		'&'	(d=RGRD)		|
	(a=AR) 	'&' (b=MD)		'&' (c= RGRD) 		'&'	(d=GDr)		|
	(a=AR) 	'&' (b=RGRD) 	'&' (c = MD) 		'&'	(d=GDr)		|
	(a=AR) 	'&' (b=RGRD) 	'&' (c = GDr) 		'&'	(d=MD)		|
	(a=GDr) '&' (b=AR) 		'&' (c=MD)			'&'	(d=RGRD)		|
	(a=GDr) '&' (b=AR) 		'&' (c=RGRD)			'&'	(d=MD)		|
	(a=GDr) '&' (b=MD) 		'&' (c=AR)			'&' (d=RGRD)		|
	(a=GDr) '&' (b=MD) 		'&' (c=RGRD)			'&'	(d=AR)		|
	(a=GDr) '&' (b=RGRD) 	'&' (c=AR)			'&'	(d=MD)		|
	(a=GDr) '&' (b=RGRD) 	'&' (c=MD)			'&'	(d=AR)		|
	(a=MD) 	'&' (b=AR) 		'&' (c=GDr)			'&'	(d=RGRD)		|
	(a=MD) 	'&' (b=AR) 		'&' (c=RGRD)			'&'	(d=GDr)		|
	(a=MD) 	'&' (b=GDr) 		'&' (c=AR)			'&'	(d=RGRD)		|
	(a=MD) 	'&' (b=GDr) 		'&' (c=RGRD)			'&'	(d=AR)		|
	(a=MD) 	'&' (b=RGRD) 	'&' (c=GDr)			'&'	(d=AR)		|
	(a=MD) 	'&' (b=RGRD) 	'&' (c=AR)			'&'	(d=GDr)		|
	(a=RGRD)'&' (b=AR) 		'&' (c=MD)			'&'	(d=GDr)		|
	(a=RGRD)'&' (b=AR) 		'&' (c=GDr)			'&'	(d=MD)		|
	(a=RGRD)'&' (b=MD) 		'&' (c=AR)			'&'	(d=GDr)		|
	(a=RGRD)'&' (b=MD) 		'&' (c=GDr)			'&'	(d=AR)		|
	(a=RGRD)'&' (b=GDr) 		'&' (c=MD)			'&'	(d=AR)		|
	(a=RGRD)'&' (b=GDr) 		'&' (c=AR)			'&'	(d=MD)		
;