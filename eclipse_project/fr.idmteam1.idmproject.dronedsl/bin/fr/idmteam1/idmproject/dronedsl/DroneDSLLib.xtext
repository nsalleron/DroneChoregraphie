grammar fr.idmteam1.idmproject.dronedsl.DroneDSLLib with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate droneDSLLib "http://www.idmteam1.fr/idmproject/dronedsl/DroneDSLLib"

Model:
	(		
		(fonctions+=FonctionDecl)*'\n'*
	);
	
terminal POURCENT returns ecore::EString:
	 (('1'..'9')|('1'..'9')('0'..'9')|('100'..'100'))'%'
;

PourcentConst:
	val=POURCENT
;

Monter:
	'monter''('
		duree=IntExp','
		vitesse_verticale=PourcentExp
		')'
;

Descendre:
	'descendre''('
		duree=IntExp','
		vitesse_verticale=PourcentExp
		')'
;

Avancer:
	'avancer''(' 
		duree=IntExp','
		vitesse_deplacement=PourcentExp
		')'
;

Reculer:
	'reculer''(' 
		duree=IntExp','
		vitesse_deplacement=PourcentExp
		')'
;

Gauche:
	'gauche''(' 
		duree=IntExp','
		vitesse_deplacement=PourcentExp
		')'
;

Droite:
	'droite''(' 
		duree=IntExp','
		vitesse_deplacement=PourcentExp
		')'
;

Pause:
	'droite''(' 
		duree=IntExp
		')'
;

RotationGauche:
	'rotation_gauche''(' 
		duree=IntExp','
		vitesse_rotation=PourcentExp
		')'
;

RotationDroite:
	'rotation_droite''(' 
		duree=IntExp','
		vitesse_rotation=PourcentExp
		')'
;

Statement:
	Avancer|Descendre|RotationDroite|RotationGauche|Pause|Droite|Gauche|Reculer|Monter|Parallele|VarDecl
;
	
FonctionDecl:
	'func' name=ID '('')' '{'
	( 
		(a+=Start)|
		(b+=End)|(body+=(Statement|FonctionExterne|FonctionCall))
	)*'\n'*
	'}'
;

FonctionExterne:
	'extern' name=ID '('')''\n'*
;

FonctionCall:
	func=[FonctionRef]'('')'
;

FonctionRef:
	FonctionDecl|FonctionExterne
;

Start:
	Decoller
;
	
End:
	Atterrir
;

Decoller:
	'decoller''('')'
;

Atterrir:
	'atterrir''('')'
;






PourcentDecl:
	'Pourcent' name=ID '=' val=PourcentConst
;

IntDecl:
	'Seconde' name=ID '=' val=IntExp
;

VarDecl:
	PourcentDecl|IntDecl
;

PourcentExp:
	PourcentConst|RefPourcentVar
;

RefIntVar:
	var=[IntDecl]
;

RefPourcentVar:
	var=[PourcentDecl]
;

IntConstante:
	val=INT
;

IntExp:
	IntConstante|RefIntVar
;
	
MD : 
	(Monter|Descendre)
;

GDr : 
	(Gauche|Droite)
;

RGRD :
	(RotationGauche|RotationDroite)
;

AR:
	(Avancer|Reculer)
;

Parallele:
	Parallele2|Parallele3
;

Parallele2:
	(a=MD)		'&' (t=GDr)		|
	(a=MD)		'&' (t=AR)		|
	(a=MD)		'&' (t=RGRD)		|
	(t=GDr)		'&' (b=AR) 		|
	(t=GDr)		'&' (b=MD )		|
	(t=GDr)		'&' (b=RGRD)		|
	(t=RGRD) 	'&' (a=MD )		|
	(t=RGRD) 	'&' (a=AR)		|
	(t=RGRD) 	'&' (a=GDr)		|
	(t=AR)		'&' (a=MD )		|
	(t=AR) 		'&' (a=RGRD) 	|
	(t=AR) 		'&' (a=GDr) 
;

Parallele3:
	(a=AR) 	'&' (b=GDr) 		'&' (c=MD)		|
	(a=AR) 	'&' (b=GDr) 		'&' (c =RGRD)	|
	(a=AR) 	'&' (b=MD)  		'&' (c = GDr)	|
	(a=AR) 	'&' (b=MD)		'&' (c= RGRD) 	|
	(a=AR) 	'&' (b=RGRD) 	'&' (c = MD) 	|
	(a=AR) 	'&' (b=RGRD) 	'&' (c = GDr) 	|
	(a=GDr) '&' (b=AR) 		'&' (c=MD)		|
	(a=GDr) '&' (b=AR) 		'&' (c=RGRD)		|
	(a=GDr) '&' (b=MD) 		'&' (c=AR)		|
	(a=GDr) '&' (b=MD) 		'&' (c=RGRD)		|
	(a=GDr) '&' (b=RGRD) 	'&' (c=AR)		|
	(a=GDr) '&' (b=RGRD) 	'&' (c=MD)		|
	(a=MD) 	'&' (b=AR) 		'&' (c=GDr)		|
	(a=MD) 	'&' (b=AR) 		'&' (c=RGRD)		|
	(a=MD) 	'&' (b=GDr) 		'&' (c=AR)		|
	(a=MD) 	'&' (b=GDr) 		'&' (c=RGRD)		|
	(a=MD) 	'&' (b=RGRD) 	'&' (c=GDr)		|
	(a=MD) 	'&' (b=RGRD) 	'&' (c=AR)		|
	(a=RGRD)'&' (b=AR) 		'&' (c=MD)		|
	(a=RGRD)'&' (b=AR) 		'&' (c=GDr)		|
	(a=RGRD)'&' (b=MD) 		'&' (c=AR)		|
	(a=RGRD)'&' (b=MD) 		'&' (c=GDr)		|
	(a=RGRD)'&' (b=GDr) 		'&' (c=MD)		|
	(a=RGRD)'&' (b=GDr) 		'&' (c=AR)	
;