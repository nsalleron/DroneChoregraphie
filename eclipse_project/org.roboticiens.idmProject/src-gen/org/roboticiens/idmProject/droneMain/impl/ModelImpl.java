/**
 * generated by Xtext 2.12.0
 */
package org.roboticiens.idmProject.droneMain.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.roboticiens.idmProject.droneMain.DroneMainPackage;
import org.roboticiens.idmProject.droneMain.Eloignement_max;
import org.roboticiens.idmProject.droneMain.FonctionDecl;
import org.roboticiens.idmProject.droneMain.Hauteur_max;
import org.roboticiens.idmProject.droneMain.Import;
import org.roboticiens.idmProject.droneMain.Main;
import org.roboticiens.idmProject.droneMain.Model;
import org.roboticiens.idmProject.droneMain.Pourcent_vitesse_deplacement_max;
import org.roboticiens.idmProject.droneMain.Pourcent_vitesse_hauteur_max;
import org.roboticiens.idmProject.droneMain.Pourcent_vitesse_rotation_max;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getImports <em>Imports</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getPvhm <em>Pvhm</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getPvdm <em>Pvdm</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getPvrm <em>Pvrm</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getHm <em>Hm</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getEm <em>Em</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getM <em>M</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.ModelImpl#getFonctions <em>Fonctions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getImports() <em>Imports</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImports()
   * @generated
   * @ordered
   */
  protected EList<Import> imports;

  /**
   * The cached value of the '{@link #getPvhm() <em>Pvhm</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPvhm()
   * @generated
   * @ordered
   */
  protected EList<Pourcent_vitesse_hauteur_max> pvhm;

  /**
   * The cached value of the '{@link #getPvdm() <em>Pvdm</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPvdm()
   * @generated
   * @ordered
   */
  protected EList<Pourcent_vitesse_deplacement_max> pvdm;

  /**
   * The cached value of the '{@link #getPvrm() <em>Pvrm</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPvrm()
   * @generated
   * @ordered
   */
  protected EList<Pourcent_vitesse_rotation_max> pvrm;

  /**
   * The cached value of the '{@link #getHm() <em>Hm</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHm()
   * @generated
   * @ordered
   */
  protected EList<Hauteur_max> hm;

  /**
   * The cached value of the '{@link #getEm() <em>Em</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEm()
   * @generated
   * @ordered
   */
  protected EList<Eloignement_max> em;

  /**
   * The cached value of the '{@link #getM() <em>M</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getM()
   * @generated
   * @ordered
   */
  protected Main m;

  /**
   * The cached value of the '{@link #getFonctions() <em>Fonctions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFonctions()
   * @generated
   * @ordered
   */
  protected EList<FonctionDecl> fonctions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DroneMainPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Import> getImports()
  {
    if (imports == null)
    {
      imports = new EObjectContainmentEList<Import>(Import.class, this, DroneMainPackage.MODEL__IMPORTS);
    }
    return imports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Pourcent_vitesse_hauteur_max> getPvhm()
  {
    if (pvhm == null)
    {
      pvhm = new EObjectContainmentEList<Pourcent_vitesse_hauteur_max>(Pourcent_vitesse_hauteur_max.class, this, DroneMainPackage.MODEL__PVHM);
    }
    return pvhm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Pourcent_vitesse_deplacement_max> getPvdm()
  {
    if (pvdm == null)
    {
      pvdm = new EObjectContainmentEList<Pourcent_vitesse_deplacement_max>(Pourcent_vitesse_deplacement_max.class, this, DroneMainPackage.MODEL__PVDM);
    }
    return pvdm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Pourcent_vitesse_rotation_max> getPvrm()
  {
    if (pvrm == null)
    {
      pvrm = new EObjectContainmentEList<Pourcent_vitesse_rotation_max>(Pourcent_vitesse_rotation_max.class, this, DroneMainPackage.MODEL__PVRM);
    }
    return pvrm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Hauteur_max> getHm()
  {
    if (hm == null)
    {
      hm = new EObjectContainmentEList<Hauteur_max>(Hauteur_max.class, this, DroneMainPackage.MODEL__HM);
    }
    return hm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Eloignement_max> getEm()
  {
    if (em == null)
    {
      em = new EObjectContainmentEList<Eloignement_max>(Eloignement_max.class, this, DroneMainPackage.MODEL__EM);
    }
    return em;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Main getM()
  {
    return m;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetM(Main newM, NotificationChain msgs)
  {
    Main oldM = m;
    m = newM;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneMainPackage.MODEL__M, oldM, newM);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setM(Main newM)
  {
    if (newM != m)
    {
      NotificationChain msgs = null;
      if (m != null)
        msgs = ((InternalEObject)m).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneMainPackage.MODEL__M, null, msgs);
      if (newM != null)
        msgs = ((InternalEObject)newM).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneMainPackage.MODEL__M, null, msgs);
      msgs = basicSetM(newM, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneMainPackage.MODEL__M, newM, newM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<FonctionDecl> getFonctions()
  {
    if (fonctions == null)
    {
      fonctions = new EObjectContainmentEList<FonctionDecl>(FonctionDecl.class, this, DroneMainPackage.MODEL__FONCTIONS);
    }
    return fonctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DroneMainPackage.MODEL__IMPORTS:
        return ((InternalEList<?>)getImports()).basicRemove(otherEnd, msgs);
      case DroneMainPackage.MODEL__PVHM:
        return ((InternalEList<?>)getPvhm()).basicRemove(otherEnd, msgs);
      case DroneMainPackage.MODEL__PVDM:
        return ((InternalEList<?>)getPvdm()).basicRemove(otherEnd, msgs);
      case DroneMainPackage.MODEL__PVRM:
        return ((InternalEList<?>)getPvrm()).basicRemove(otherEnd, msgs);
      case DroneMainPackage.MODEL__HM:
        return ((InternalEList<?>)getHm()).basicRemove(otherEnd, msgs);
      case DroneMainPackage.MODEL__EM:
        return ((InternalEList<?>)getEm()).basicRemove(otherEnd, msgs);
      case DroneMainPackage.MODEL__M:
        return basicSetM(null, msgs);
      case DroneMainPackage.MODEL__FONCTIONS:
        return ((InternalEList<?>)getFonctions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DroneMainPackage.MODEL__IMPORTS:
        return getImports();
      case DroneMainPackage.MODEL__PVHM:
        return getPvhm();
      case DroneMainPackage.MODEL__PVDM:
        return getPvdm();
      case DroneMainPackage.MODEL__PVRM:
        return getPvrm();
      case DroneMainPackage.MODEL__HM:
        return getHm();
      case DroneMainPackage.MODEL__EM:
        return getEm();
      case DroneMainPackage.MODEL__M:
        return getM();
      case DroneMainPackage.MODEL__FONCTIONS:
        return getFonctions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DroneMainPackage.MODEL__IMPORTS:
        getImports().clear();
        getImports().addAll((Collection<? extends Import>)newValue);
        return;
      case DroneMainPackage.MODEL__PVHM:
        getPvhm().clear();
        getPvhm().addAll((Collection<? extends Pourcent_vitesse_hauteur_max>)newValue);
        return;
      case DroneMainPackage.MODEL__PVDM:
        getPvdm().clear();
        getPvdm().addAll((Collection<? extends Pourcent_vitesse_deplacement_max>)newValue);
        return;
      case DroneMainPackage.MODEL__PVRM:
        getPvrm().clear();
        getPvrm().addAll((Collection<? extends Pourcent_vitesse_rotation_max>)newValue);
        return;
      case DroneMainPackage.MODEL__HM:
        getHm().clear();
        getHm().addAll((Collection<? extends Hauteur_max>)newValue);
        return;
      case DroneMainPackage.MODEL__EM:
        getEm().clear();
        getEm().addAll((Collection<? extends Eloignement_max>)newValue);
        return;
      case DroneMainPackage.MODEL__M:
        setM((Main)newValue);
        return;
      case DroneMainPackage.MODEL__FONCTIONS:
        getFonctions().clear();
        getFonctions().addAll((Collection<? extends FonctionDecl>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DroneMainPackage.MODEL__IMPORTS:
        getImports().clear();
        return;
      case DroneMainPackage.MODEL__PVHM:
        getPvhm().clear();
        return;
      case DroneMainPackage.MODEL__PVDM:
        getPvdm().clear();
        return;
      case DroneMainPackage.MODEL__PVRM:
        getPvrm().clear();
        return;
      case DroneMainPackage.MODEL__HM:
        getHm().clear();
        return;
      case DroneMainPackage.MODEL__EM:
        getEm().clear();
        return;
      case DroneMainPackage.MODEL__M:
        setM((Main)null);
        return;
      case DroneMainPackage.MODEL__FONCTIONS:
        getFonctions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DroneMainPackage.MODEL__IMPORTS:
        return imports != null && !imports.isEmpty();
      case DroneMainPackage.MODEL__PVHM:
        return pvhm != null && !pvhm.isEmpty();
      case DroneMainPackage.MODEL__PVDM:
        return pvdm != null && !pvdm.isEmpty();
      case DroneMainPackage.MODEL__PVRM:
        return pvrm != null && !pvrm.isEmpty();
      case DroneMainPackage.MODEL__HM:
        return hm != null && !hm.isEmpty();
      case DroneMainPackage.MODEL__EM:
        return em != null && !em.isEmpty();
      case DroneMainPackage.MODEL__M:
        return m != null;
      case DroneMainPackage.MODEL__FONCTIONS:
        return fonctions != null && !fonctions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
