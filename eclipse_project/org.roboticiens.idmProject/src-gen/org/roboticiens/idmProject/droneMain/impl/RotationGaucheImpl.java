/**
 * generated by Xtext 2.12.0
 */
package org.roboticiens.idmProject.droneMain.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.roboticiens.idmProject.droneMain.DroneMainPackage;
import org.roboticiens.idmProject.droneMain.IntExp;
import org.roboticiens.idmProject.droneMain.PourcentExp;
import org.roboticiens.idmProject.droneMain.RotationGauche;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rotation Gauche</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.RotationGaucheImpl#getDuree <em>Duree</em>}</li>
 *   <li>{@link org.roboticiens.idmProject.droneMain.impl.RotationGaucheImpl#getVitesse_rotation <em>Vitesse rotation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RotationGaucheImpl extends StatementImpl implements RotationGauche
{
  /**
   * The cached value of the '{@link #getDuree() <em>Duree</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuree()
   * @generated
   * @ordered
   */
  protected IntExp duree;

  /**
   * The cached value of the '{@link #getVitesse_rotation() <em>Vitesse rotation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVitesse_rotation()
   * @generated
   * @ordered
   */
  protected PourcentExp vitesse_rotation;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RotationGaucheImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DroneMainPackage.Literals.ROTATION_GAUCHE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntExp getDuree()
  {
    return duree;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDuree(IntExp newDuree, NotificationChain msgs)
  {
    IntExp oldDuree = duree;
    duree = newDuree;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneMainPackage.ROTATION_GAUCHE__DUREE, oldDuree, newDuree);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDuree(IntExp newDuree)
  {
    if (newDuree != duree)
    {
      NotificationChain msgs = null;
      if (duree != null)
        msgs = ((InternalEObject)duree).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneMainPackage.ROTATION_GAUCHE__DUREE, null, msgs);
      if (newDuree != null)
        msgs = ((InternalEObject)newDuree).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneMainPackage.ROTATION_GAUCHE__DUREE, null, msgs);
      msgs = basicSetDuree(newDuree, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneMainPackage.ROTATION_GAUCHE__DUREE, newDuree, newDuree));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PourcentExp getVitesse_rotation()
  {
    return vitesse_rotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVitesse_rotation(PourcentExp newVitesse_rotation, NotificationChain msgs)
  {
    PourcentExp oldVitesse_rotation = vitesse_rotation;
    vitesse_rotation = newVitesse_rotation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION, oldVitesse_rotation, newVitesse_rotation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVitesse_rotation(PourcentExp newVitesse_rotation)
  {
    if (newVitesse_rotation != vitesse_rotation)
    {
      NotificationChain msgs = null;
      if (vitesse_rotation != null)
        msgs = ((InternalEObject)vitesse_rotation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION, null, msgs);
      if (newVitesse_rotation != null)
        msgs = ((InternalEObject)newVitesse_rotation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION, null, msgs);
      msgs = basicSetVitesse_rotation(newVitesse_rotation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION, newVitesse_rotation, newVitesse_rotation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DroneMainPackage.ROTATION_GAUCHE__DUREE:
        return basicSetDuree(null, msgs);
      case DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION:
        return basicSetVitesse_rotation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DroneMainPackage.ROTATION_GAUCHE__DUREE:
        return getDuree();
      case DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION:
        return getVitesse_rotation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DroneMainPackage.ROTATION_GAUCHE__DUREE:
        setDuree((IntExp)newValue);
        return;
      case DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION:
        setVitesse_rotation((PourcentExp)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DroneMainPackage.ROTATION_GAUCHE__DUREE:
        setDuree((IntExp)null);
        return;
      case DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION:
        setVitesse_rotation((PourcentExp)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DroneMainPackage.ROTATION_GAUCHE__DUREE:
        return duree != null;
      case DroneMainPackage.ROTATION_GAUCHE__VITESSE_ROTATION:
        return vitesse_rotation != null;
    }
    return super.eIsSet(featureID);
  }

} //RotationGaucheImpl
