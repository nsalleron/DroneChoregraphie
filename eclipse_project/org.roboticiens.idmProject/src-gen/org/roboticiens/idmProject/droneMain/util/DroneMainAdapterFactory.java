/**
 * generated by Xtext 2.12.0
 */
package org.roboticiens.idmProject.droneMain.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.roboticiens.idmProject.droneMain.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.roboticiens.idmProject.droneMain.DroneMainPackage
 * @generated
 */
public class DroneMainAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DroneMainPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DroneMainAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = DroneMainPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DroneMainSwitch<Adapter> modelSwitch =
    new DroneMainSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseMain(Main object)
      {
        return createMainAdapter();
      }
      @Override
      public Adapter casePourcentConst(PourcentConst object)
      {
        return createPourcentConstAdapter();
      }
      @Override
      public Adapter caseImports(Imports object)
      {
        return createImportsAdapter();
      }
      @Override
      public Adapter caseImport(Import object)
      {
        return createImportAdapter();
      }
      @Override
      public Adapter casePourcent_vitesse_hauteur_max(Pourcent_vitesse_hauteur_max object)
      {
        return createPourcent_vitesse_hauteur_maxAdapter();
      }
      @Override
      public Adapter casePourcent_vitesse_deplacement_max(Pourcent_vitesse_deplacement_max object)
      {
        return createPourcent_vitesse_deplacement_maxAdapter();
      }
      @Override
      public Adapter casePourcent_vitesse_rotation_max(Pourcent_vitesse_rotation_max object)
      {
        return createPourcent_vitesse_rotation_maxAdapter();
      }
      @Override
      public Adapter caseHauteur_max(Hauteur_max object)
      {
        return createHauteur_maxAdapter();
      }
      @Override
      public Adapter caseEloignement_max(Eloignement_max object)
      {
        return createEloignement_maxAdapter();
      }
      @Override
      public Adapter caseMonter(Monter object)
      {
        return createMonterAdapter();
      }
      @Override
      public Adapter caseDescendre(Descendre object)
      {
        return createDescendreAdapter();
      }
      @Override
      public Adapter caseAvancer(Avancer object)
      {
        return createAvancerAdapter();
      }
      @Override
      public Adapter caseReculer(Reculer object)
      {
        return createReculerAdapter();
      }
      @Override
      public Adapter caseGauche(Gauche object)
      {
        return createGaucheAdapter();
      }
      @Override
      public Adapter caseDroite(Droite object)
      {
        return createDroiteAdapter();
      }
      @Override
      public Adapter casePause(Pause object)
      {
        return createPauseAdapter();
      }
      @Override
      public Adapter caseRotationGauche(RotationGauche object)
      {
        return createRotationGaucheAdapter();
      }
      @Override
      public Adapter caseRotationDroite(RotationDroite object)
      {
        return createRotationDroiteAdapter();
      }
      @Override
      public Adapter caseStatement(Statement object)
      {
        return createStatementAdapter();
      }
      @Override
      public Adapter caseFonctionDecl(FonctionDecl object)
      {
        return createFonctionDeclAdapter();
      }
      @Override
      public Adapter casePourcentDecl(PourcentDecl object)
      {
        return createPourcentDeclAdapter();
      }
      @Override
      public Adapter caseIntDecl(IntDecl object)
      {
        return createIntDeclAdapter();
      }
      @Override
      public Adapter casePourcentExp(PourcentExp object)
      {
        return createPourcentExpAdapter();
      }
      @Override
      public Adapter caseRefIntVar(RefIntVar object)
      {
        return createRefIntVarAdapter();
      }
      @Override
      public Adapter caseRefPourcentVar(RefPourcentVar object)
      {
        return createRefPourcentVarAdapter();
      }
      @Override
      public Adapter caseIntConstante(IntConstante object)
      {
        return createIntConstanteAdapter();
      }
      @Override
      public Adapter caseIntExp(IntExp object)
      {
        return createIntExpAdapter();
      }
      @Override
      public Adapter caseFonctionCall(FonctionCall object)
      {
        return createFonctionCallAdapter();
      }
      @Override
      public Adapter caseMD(MD object)
      {
        return createMDAdapter();
      }
      @Override
      public Adapter caseGDr(GDr object)
      {
        return createGDrAdapter();
      }
      @Override
      public Adapter caseRGRD(RGRD object)
      {
        return createRGRDAdapter();
      }
      @Override
      public Adapter caseAR(AR object)
      {
        return createARAdapter();
      }
      @Override
      public Adapter caseParallele2(Parallele2 object)
      {
        return createParallele2Adapter();
      }
      @Override
      public Adapter caseParallele3(Parallele3 object)
      {
        return createParallele3Adapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Main <em>Main</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Main
   * @generated
   */
  public Adapter createMainAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.PourcentConst <em>Pourcent Const</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.PourcentConst
   * @generated
   */
  public Adapter createPourcentConstAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Imports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Imports
   * @generated
   */
  public Adapter createImportsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Import
   * @generated
   */
  public Adapter createImportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Pourcent_vitesse_hauteur_max <em>Pourcent vitesse hauteur max</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Pourcent_vitesse_hauteur_max
   * @generated
   */
  public Adapter createPourcent_vitesse_hauteur_maxAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Pourcent_vitesse_deplacement_max <em>Pourcent vitesse deplacement max</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Pourcent_vitesse_deplacement_max
   * @generated
   */
  public Adapter createPourcent_vitesse_deplacement_maxAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Pourcent_vitesse_rotation_max <em>Pourcent vitesse rotation max</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Pourcent_vitesse_rotation_max
   * @generated
   */
  public Adapter createPourcent_vitesse_rotation_maxAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Hauteur_max <em>Hauteur max</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Hauteur_max
   * @generated
   */
  public Adapter createHauteur_maxAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Eloignement_max <em>Eloignement max</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Eloignement_max
   * @generated
   */
  public Adapter createEloignement_maxAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Monter <em>Monter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Monter
   * @generated
   */
  public Adapter createMonterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Descendre <em>Descendre</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Descendre
   * @generated
   */
  public Adapter createDescendreAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Avancer <em>Avancer</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Avancer
   * @generated
   */
  public Adapter createAvancerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Reculer <em>Reculer</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Reculer
   * @generated
   */
  public Adapter createReculerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Gauche <em>Gauche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Gauche
   * @generated
   */
  public Adapter createGaucheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Droite <em>Droite</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Droite
   * @generated
   */
  public Adapter createDroiteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Pause <em>Pause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Pause
   * @generated
   */
  public Adapter createPauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.RotationGauche <em>Rotation Gauche</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.RotationGauche
   * @generated
   */
  public Adapter createRotationGaucheAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.RotationDroite <em>Rotation Droite</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.RotationDroite
   * @generated
   */
  public Adapter createRotationDroiteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Statement
   * @generated
   */
  public Adapter createStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.FonctionDecl <em>Fonction Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.FonctionDecl
   * @generated
   */
  public Adapter createFonctionDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.PourcentDecl <em>Pourcent Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.PourcentDecl
   * @generated
   */
  public Adapter createPourcentDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.IntDecl <em>Int Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.IntDecl
   * @generated
   */
  public Adapter createIntDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.PourcentExp <em>Pourcent Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.PourcentExp
   * @generated
   */
  public Adapter createPourcentExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.RefIntVar <em>Ref Int Var</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.RefIntVar
   * @generated
   */
  public Adapter createRefIntVarAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.RefPourcentVar <em>Ref Pourcent Var</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.RefPourcentVar
   * @generated
   */
  public Adapter createRefPourcentVarAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.IntConstante <em>Int Constante</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.IntConstante
   * @generated
   */
  public Adapter createIntConstanteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.IntExp <em>Int Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.IntExp
   * @generated
   */
  public Adapter createIntExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.FonctionCall <em>Fonction Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.FonctionCall
   * @generated
   */
  public Adapter createFonctionCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.MD <em>MD</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.MD
   * @generated
   */
  public Adapter createMDAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.GDr <em>GDr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.GDr
   * @generated
   */
  public Adapter createGDrAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.RGRD <em>RGRD</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.RGRD
   * @generated
   */
  public Adapter createRGRDAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.AR <em>AR</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.AR
   * @generated
   */
  public Adapter createARAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Parallele2 <em>Parallele2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Parallele2
   * @generated
   */
  public Adapter createParallele2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.roboticiens.idmProject.droneMain.Parallele3 <em>Parallele3</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.roboticiens.idmProject.droneMain.Parallele3
   * @generated
   */
  public Adapter createParallele3Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //DroneMainAdapterFactory
